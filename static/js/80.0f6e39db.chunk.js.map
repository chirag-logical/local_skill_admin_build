{"version":3,"sources":["views/extensions/sweet-alert/SweetAlertTypes.js","views/extensions/sweet-alert/SweetAlertBasic.js","views/extensions/sweet-alert/SweetAlertOptions.js","views/extensions/sweet-alert/SweetAlertCallback.js","views/extensions/sweet-alert/SweetAlertPositions.js","views/extensions/sweet-alert/SweetAlertAnimations.js","views/extensions/sweet-alert/index.js","@core/components/extensions-header/index.js"],"names":["MySwal","withReactContent","Swal","SweetAlertTypes","tag","className","color","onClick","fire","title","text","icon","customClass","confirmButton","buttonsStyling","outline","BasicSweetAlert","footer","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","size","cancelButtonText","cancelButton","SweetAlertOptions","imageUrl","alertImg","imageWidth","imageHeight","imageAlt","timerInterval","timerProgressBar","timer","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","backdrop","allowOutsideClick","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","value","avatar_url","BasicSweetCallback","md","sm","cancel","SweetAlertPositions","position","showConfirmButton","AnimatedSweetAlert","showClass","popup","SweetAlert","subTitle","link","SweetAlertBasic","SweetAlertAnimations","SweetAlertCallback","ExtensionsHeader","props","href","target","rel"],"mappings":"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","file":"static/js/80.0f6e39db.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertTypes = () => {\n  const handleSuccess = () => {\n    return MySwal.fire({\n      title: 'Good job!',\n      text: 'You clicked the button!',\n      icon: 'success',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleInfo = () => {\n    return MySwal.fire({\n      title: 'Info!',\n      text: 'You clicked the button!',\n      icon: 'info',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleWarning = () => {\n    return MySwal.fire({\n      title: 'Warning!',\n      text: ' You clicked the button!',\n      icon: 'warning',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleError = () => {\n    return MySwal.fire({\n      title: 'Error!',\n      text: ' You clicked the button!',\n      icon: 'error',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleQuestion = () => {\n    return MySwal.fire({\n      title: 'Question?',\n      text: ' You clicked the button!',\n      icon: 'question',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\",\n          \"success\" and \"info\".\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='success' onClick={handleSuccess} outline>\n            Success\n          </Button>\n          <Button color='danger' onClick={handleError} outline>\n            Error\n          </Button>\n          <Button color='warning' onClick={handleWarning} outline>\n            Warning\n          </Button>\n          <Button color='info' onClick={handleInfo} outline>\n            Info\n          </Button>\n          <Button onClick={handleQuestion} outline>\n            Question\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertTypes\n","// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport { ThumbsUp, ThumbsDown } from 'react-feather'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Reactstrap Imports'\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\nconst MySwal = withReactContent(Swal)\n\nconst BasicSweetAlert = () => {\n  const handleBasicTitleAlert = () => {\n    return MySwal.fire({\n      title: 'Any fool can use a computer',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTitleAlert = () => {\n    return MySwal.fire({\n      title: 'The Internet?,',\n      text: 'That thing is still around?',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFooterAlert = () => {\n    return MySwal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Something went wrong!',\n      footer: '<a href=\"#\">Why do I have this issue?</a>',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleHTMLAlert = () => {\n    return MySwal.fire({\n      title: '<strong>HTML <u>example</u></strong>',\n      icon: 'info',\n      html:\n        'You can use <b>bold text</b>, ' +\n        '<a href=\"https://pixinvent.com/\" target=\"_blank\">links</a> ' +\n        'and other HTML tags',\n      showCloseButton: true,\n      showCancelButton: true,\n      focusConfirm: false,\n      confirmButtonText: (\n        <span className='align-middle'>\n          <ThumbsUp className='me-50' size={15} />\n          <span className='align-middle'>Great!</span>\n        </span>\n      ),\n      cancelButtonText: <ThumbsDown size={15} />,\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop\n          computer, mobile or tablet. It's even highly customizable, as you can see below!\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleBasicTitleAlert} outline>\n            Basic\n          </Button>\n          <Button color='primary' onClick={handleTitleAlert} outline>\n            With Title\n          </Button>\n          <Button color='primary' onClick={handleFooterAlert} outline>\n            With Footer\n          </Button>\n          <Button color='primary' onClick={handleHTMLAlert} outline>\n            HTML\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicSweetAlert\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Images\nimport alertImg from '@src/assets/images/slider/04.jpg'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 300,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTimeoutAlert = () => {\n    let timerInterval\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <b></b> seconds.',\n      timerProgressBar: true,\n      timer: 2000,\n      didOpen() {\n        Swal.showLoading()\n        const b = Swal.getHtmlContainer().querySelector('b')\n        timerInterval = setInterval(() => {\n          b.textContent = Swal.getTimerLeft()\n        }, 100)\n      },\n      willClose() {\n        clearInterval(timerInterval)\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer')\n      }\n    })\n  }\n\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      backdrop: true,\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        input: 'mx-3',\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ms-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm(login) {\n        return fetch(`//api.github.com/users/${login}`)\n          .then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.statusText)\n            }\n            return response.json()\n          })\n          .catch(function (error) {\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\n          })\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleImageAlert} outline>\n            Image\n          </Button>\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\n            Timeout\n          </Button>\n          <Button color='primary' onClick={handleClickOutside} outline>\n            Click Outside\n          </Button>\n          <Button color='primary' onClick={handleAjax} outline>\n            Ajax\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertOptions\n","// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button, Row, Col } from 'reactstrap'\n\nconst MySwal = withReactContent(Swal)\n\nconst BasicSweetCallback = () => {\n  const handleConfirmText = () => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const handleConfirmCancel = () => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ms-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        MySwal.fire({\n          title: 'Cancelled',\n          text: 'Your imaginary file is safe :)',\n          icon: 'error',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Callback</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col className='mb-2 mb-md-0' md='6' sm='12'>\n            <h5 className='mb-1'>Confirm Button Text</h5>\n            <Button color='primary' onClick={handleConfirmText} outline>\n              Confirm Text\n            </Button>\n          </Col>\n\n          <Col md='6' sm='12'>\n            <h5 className='mb-1'>Confirm Button Color</h5>\n            <Button color='primary' onClick={handleConfirmCancel} outline>\n              Confirm & cancel\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicSweetCallback\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertPositions = () => {\n  const handleTopStart = () => {\n    return MySwal.fire({\n      position: 'top-start',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleTopEnd = () => {\n    return MySwal.fire({\n      position: 'top-end',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleBottomStart = () => {\n    return MySwal.fire({\n      position: 'bottom-start',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleBottomEnd = () => {\n    return MySwal.fire({\n      position: 'bottom-end',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Position</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          You can specify position of your alert with{' '}\n          <code>{'position : top-start | top-end | bottom-start | bottom-end '}</code>{' '}\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleTopStart} outline>\n            Top Start\n          </Button>\n\n          <Button color='primary' onClick={handleTopEnd} outline>\n            Top End\n          </Button>\n\n          <Button color='primary' onClick={handleBottomStart} outline>\n            Bottom Start\n          </Button>\n\n          <Button color='primary' onClick={handleBottomEnd} outline>\n            Bottom End\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertPositions\n","// ** Third Party Components\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\nconst MySwal = withReactContent(Swal)\n\nconst AnimatedSweetAlert = () => {\n  const handleBounceIn = () => {\n    return MySwal.fire({\n      title: 'Bounce In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__bounceIn'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFadeIn = () => {\n    return MySwal.fire({\n      title: 'Fade In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__fadeIn'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFlipIn = () => {\n    return MySwal.fire({\n      title: 'Flip In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__flipInX'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTada = () => {\n    return MySwal.fire({\n      title: 'Tada Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__tada'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleShake = () => {\n    return MySwal.fire({\n      title: 'Shake Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__shakeX'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Animations</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          Use <code>popup</code> inside <code>showClass</code> parameter to add animation to your alert.\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleBounceIn} outline>\n            Bounce In\n          </Button>\n          <Button color='primary' onClick={handleFadeIn} outline>\n            Fade In\n          </Button>\n          <Button color='primary' onClick={handleFlipIn} outline>\n            Flip In\n          </Button>\n          <Button color='primary' onClick={handleTada} outline>\n            Tada\n          </Button>\n          <Button color='primary' onClick={handleShake} outline>\n            Shake\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default AnimatedSweetAlert\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Demo Components\nimport SweetAlertTypes from './SweetAlertTypes'\nimport SweetAlertBasic from './SweetAlertBasic'\nimport SweetAlertOptions from './SweetAlertOptions'\nimport SweetAlertCallback from './SweetAlertCallback'\nimport SweetAlertPositions from './SweetAlertPositions'\nimport SweetAlertAnimations from './SweetAlertAnimations'\n\n// ** Styles\nimport 'animate.css/animate.css'\nimport '@styles/base/plugins/extensions/ext-component-sweet-alerts.scss'\n\nconst SweetAlert = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='Sweet Alerts2'\n        subTitle='A React implementation of SweetAlert2'\n        link='https://github.com/sweetalert2/sweetalert2-react-content'\n      />\n      <Row>\n        <Col sm='12'>\n          <SweetAlertBasic />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertPositions />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertAnimations />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertTypes />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertOptions />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertCallback />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default SweetAlert\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}