{"version":3,"sources":["views/userList/view/ApplicationPlan.js","views/userList/view/Application.js","views/userList/view/UserTimeline.js","views/userList/view/CompanyDetails.js","views/userList/view/Tabs.js","views/userList/view/UserInfoCard.js","views/userList/view/index.js","@core/components/timeline/index.js"],"names":["ApplicationPlan","selectedUser","resumeAppliedInCompanies","length","map","list","index","tag","vacancy","title","md","className","firstName","description","slice","skills","list2","index2","color","packageStart","packageEnd","type","vacancyStatus","numberOfVacancies","value","Application","UserTimeline","resume","data","content","lastName","nationality","meta","moment","createdAt","format","customContent","src","pdf","alt","height","education","degree","size","id","outline","toggler","flush","location","institute","startDate","endDate","skillName","totalExperienceInMonths","experience","initials","business_name","job_title","isCurrentlyWorking","address","achivements","CompanyDetails","renderUserImg","image","width","name","contentStyles","borderRadius","fontSize","style","statusColors","active","pending","inactive","companies","category","xl","xs","sm","website","isVerified","numberOfEmployees","compIdentityNumber","UserTabs","toggleTab","pills","onClick","activeTab","tabId","roleColors","job_seeker","employer","freelancer","service","admin","UserInfoCard","profilePictureUrl","role","emailAddress","mobilePhone","UserView","store","useSelector","state","userList","dispatch","useDispatch","useParams","useEffect","getUser","useState","setActive","undefined","lg","order","tab","to","Timeline","props","Tag","classnames","item","i","ItemTag","icon","metaClassName"],"mappings":"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","file":"static/js/81.25cbdabd.chunk.js","sourcesContent":["import { Fragment } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Badge,\r\n  Alert,\r\n  CardBody,\r\n  Progress,\r\n  CardTitle,\r\n  CardHeader\r\n} from 'reactstrap'\r\n\r\nconst ApplicationPlan = ({ selectedUser }) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      {selectedUser?.resumeAppliedInCompanies?.length !== 0 ? (\r\n        selectedUser?.resumeAppliedInCompanies?.map((list, index) => {\r\n          return (\r\n            <Card key={index}>\r\n              <CardHeader>\r\n                <CardTitle tag='h4'>{list?.vacancy?.title}</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md='6'>\r\n                    <div className='mb-2 pb-50'>\r\n                      <h5>\r\n                        {selectedUser?.firstName} have current applied for <strong>{list?.vacancy?.title}</strong>\r\n                      </h5>\r\n                      <span>{list?.vacancy?.description.slice(0, 70)}...</span>\r\n                    </div>\r\n                    <div className='mb-2 pb-50'>\r\n                      <h5>Skills</h5>\r\n                      {list?.vacancy?.skills?.map((list2, index2) => {\r\n                        return (\r\n                          <Badge color='light-primary' className='ms-50' key={index2}>\r\n                            {list2}\r\n                          </Badge>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                    <div className='mb-2 mb-md-1'>\r\n                      <h5>\r\n                        Package Details\r\n                      </h5>\r\n                      <span>Starting from </span>\r\n                      <Badge color='light-primary'>\r\n                        {list?.vacancy?.packageStart}\r\n                      </Badge>\r\n                      <span> / </span>\r\n                      <Badge color='light-primary'>\r\n                        {list?.vacancy?.packageEnd}\r\n                      </Badge>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md='6'>\r\n                    <Alert color='warning' className='mb-2'>\r\n                      <h4 className='alert-heading'>Vacancy Type: {list?.vacancy?.type}</h4>\r\n                      <div className='alert-body'>Vacancy Status: {list?.vacancy?.vacancyStatus}</div>\r\n                    </Alert>\r\n                    <div className='plan-statistics pt-1'>\r\n                      <div className='d-flex justify-content-between'>\r\n                        <h5 className='fw-bolder'>Vacancies</h5>\r\n                        <h5 className='fw-bolder'>1 of {list?.vacancy?.numberOfVacancies}</h5>\r\n                      </div>\r\n                      <Progress className='mb-50' value={list?.vacancy?.numberOfVacancies} />\r\n                      <p className='mt-50'>There are {list?.vacancy?.numberOfVacancies} vacancies remaining.</p>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          )\r\n        })\r\n      ) : (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle tag='h4'>Not applied in any vacancies.</CardTitle>\r\n          </CardHeader>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ApplicationPlan\r\n","import { Fragment } from 'react'\r\nimport ApplicationPlan from './ApplicationPlan'\r\n\r\nconst Application = ({ selectedUser }) => {\r\n  return (\r\n    <Fragment>\r\n      <ApplicationPlan selectedUser={selectedUser} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Application\r\n","import { Fragment } from 'react'\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport Timeline from '@components/timeline'\r\n\r\n// ** Images\r\nimport pdf from '@src/assets/images/icons/file-icons/pdf.png'\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, CardBody, Button, UncontrolledCollapse, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport { BookOpen, Home, X, Check, MapPin } from 'react-feather'\r\nimport moment from 'moment'\r\n\r\n\r\nconst UserTimeline = ({ resume, selectedUser }) => {\r\n  // ** Timeline Data\r\n  const data = [\r\n    {\r\n      title: `${resume?.title}`,\r\n      content: `Hey my self ${selectedUser?.firstName} ${selectedUser?.lastName} from ${resume?.nationality}. I am ${resume?.type} at ${resume?.title}.`,\r\n      meta: `${moment(resume?.createdAt).format('MMM-DD-YYYY')}`,\r\n      customContent: (\r\n        <div className='d-flex align-items-center'>\r\n          <img className='me-1' src={pdf} alt='pdf' height='23' />\r\n          <span>invoice.pdf</span>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      title: `Education ${resume?.education[0]?.degree}`,\r\n      content: `${resume?.education[0]?.description}`,\r\n      color: 'secondary',\r\n      customContent: (\r\n        <Fragment>\r\n          <Button size='sm' color='primary' id='reportToggler1' outline>\r\n            Show Report\r\n          </Button>\r\n          <UncontrolledCollapse toggler='#reportToggler1'>\r\n            <ListGroup className='mt-1' flush >\r\n              {resume?.education.map((list, index) => {\r\n                return (\r\n                  <ListGroupItem key={index} className='list-group-item'>\r\n                    <div>\r\n                      <p className='mb-50'><BookOpen size={17} /> {list?.degree} from <span className='fw-bold'>({list?.location})</span></p>\r\n                      <p className='mb-50'><Home size={17} /> {list?.institute}</p>\r\n                      <hr className='m-50' />\r\n                      <div className='d-flex justify-content-between'>\r\n                        <p className='timeline-event-time mb-0'>{list?.startDate}</p>\r\n                        <p className='timeline-event-time mb-0'>{list?.endDate}</p>\r\n                      </div>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ListGroup>\r\n          </UncontrolledCollapse>\r\n        </Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: 'Skills',\r\n      content: `${selectedUser?.firstName} have total ${resume?.skills?.length} skills to display companies.`,\r\n      meta: `${moment(resume?.createdAt).format('MMM-DD-YYYY')}`,\r\n      color: 'success',\r\n      customContent: (\r\n        <Fragment>\r\n          <Button size='sm' color='primary' id='reportToggler2' outline>\r\n            Show Report\r\n          </Button>\r\n          <UncontrolledCollapse toggler='#reportToggler2'>\r\n            <ListGroup className='mt-1' flush>\r\n              {resume?.skills?.map((list, index) => {\r\n                return (\r\n                  <ListGroupItem key={index} className='list-group-item'>\r\n                    <span>\r\n                      {list?.skillName} : <span className='fw-bold'>{list?.totalExperienceInMonths} Year Exp</span>\r\n                    </span>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ListGroup>\r\n          </UncontrolledCollapse>\r\n        </Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: 'Experience',\r\n      content: `${selectedUser?.firstName} have total ${resume?.experience?.length} skills to display companies.`,\r\n      meta: `${moment(resume?.createdAt).format('MMM-DD-YYYY')}`,\r\n      color: 'warning',\r\n      customContent: (\r\n        <Fragment>\r\n          {resume?.experience?.map((list, index) => {\r\n            return (\r\n              <>\r\n                <div className='d-flex justify-content-between flex-wrap' key={index}>\r\n                  <div className='d-flex align-items-center'>\r\n                    <Avatar\r\n                      initials\r\n                      className='me-1'\r\n                      color='light-primary'\r\n                      content={list?.business_name}\r\n                    />\r\n                    <div>\r\n                      <h6 className='mb-0'>{list?.business_name}</h6>\r\n                      <span className='text-muted'>{list?.job_title}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className='d-flex flex-wrap align-items-center cursor-pointer mt-sm-0 mt-50'>\r\n                    {list?.isCurrentlyWorking ? (\r\n                      <Check size={20} />\r\n                    ) : (\r\n                      <X size={20} />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <div className='d-flex align-items-center'>\r\n                  <MapPin size={15} />\r\n                  <p className='mb-0 ms-50'>{list?.address || 'Not Added'}</p>\r\n                </div>\r\n              </>\r\n            )\r\n          })}\r\n        </Fragment>\r\n      )\r\n    },\r\n    {\r\n      title: `${selectedUser?.firstName}'s achievements.`,\r\n      content: `${selectedUser?.firstName} have achieve total ${resume?.achivements?.length} achievements to display companies.`,\r\n      meta: `${moment(resume?.createdAt).format('MMM-DD-YYYY')}`,\r\n      color: 'success',\r\n      customContent: (\r\n        <Fragment>\r\n          <Button size='sm' color='primary' id='reportToggler3' outline>\r\n            Show Report\r\n          </Button>\r\n          <UncontrolledCollapse toggler='#reportToggler3'>\r\n            <ListGroup className='mt-1' flush>\r\n              {resume?.achivements?.map((list, index) => {\r\n                return (\r\n                  <ListGroupItem className='list-group-item' key={index}>\r\n                    <div>\r\n                      <h6 className='mb-0'>{list?.title}</h6>\r\n                      <span className='text-muted'>{list?.location}</span>\r\n                      <p>{list?.description}</p>\r\n                    </div>\r\n                    <hr className='m-50' />\r\n                    <div className='d-flex justify-content-between'>\r\n                      <p className='timeline-event-time mb-0'>{list?.startDate}</p>\r\n                      <p className='timeline-event-time mb-0'>{list?.endDate}</p>\r\n                    </div>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ListGroup>\r\n          </UncontrolledCollapse>\r\n        </Fragment>\r\n      )\r\n    }\r\n  ]\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>User Resume</CardTitle>\r\n      </CardHeader>\r\n      <CardBody className='pt-1'>\r\n        <Timeline data={data} className='ms-50' />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UserTimeline\r\n","import React, { Fragment } from 'react'\r\nimport { Badge, Card, CardBody, CardHeader, CardTitle, Col, Row } from 'reactstrap'\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\nimport { Briefcase, Check } from 'react-feather'\r\n\r\nconst CompanyDetails = ({ selectedUser }) => {\r\n\r\n    // ** render user img\r\n    const renderUserImg = (list) => {\r\n        if (list?.image !== null) {\r\n            return (\r\n                <img\r\n                    height='110'\r\n                    width='110'\r\n                    alt='user-avatar'\r\n                    src={list?.image}\r\n                    className='img-fluid rounded mt-3 mb-2'\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <Avatar\r\n                    initials\r\n                    color={'light-primary'}\r\n                    className='rounded mt-3 mb-2'\r\n                    content={list?.name}\r\n                    contentStyles={{\r\n                        borderRadius: 0,\r\n                        fontSize: 'calc(48px)',\r\n                        width: '100%',\r\n                        height: '100%'\r\n                    }}\r\n                    style={{\r\n                        height: '110px',\r\n                        width: '110px'\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    const statusColors = {\r\n        active: 'light-success',\r\n        pending: 'light-warning',\r\n        inactive: 'light-secondary'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Fragment>\r\n                {selectedUser?.companies?.map((list, index) => {\r\n                    return (\r\n                        <>\r\n                            <Card key={index}>\r\n                                <CardBody>\r\n                                    <div className='user-avatar-section'>\r\n                                        <div className='d-flex align-items-center flex-column'>\r\n                                            {renderUserImg(list)}\r\n                                            <div className='d-flex flex-column align-items-center text-center'>\r\n                                                <div className='user-info'>\r\n                                                    <h4>{list?.name} <Badge>{list?.category?.name}</Badge></h4>\r\n                                                    {selectedUser !== null ? (\r\n                                                        <Badge color='light-info' className='text-capitalize'>\r\n                                                            {selectedUser?.firstName}   {selectedUser?.lastName}\r\n                                                        </Badge>\r\n                                                    ) : null}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-around my-2 pt-75'>\r\n                                        <div className='d-flex align-items-start me-2'>\r\n                                            <Badge color='light-primary' className='rounded p-75'>\r\n                                                <Check className='font-medium-2' />\r\n                                            </Badge>\r\n                                            <div className='ms-75'>\r\n                                                <h4 className='mb-0'>1.23k</h4>\r\n                                                <small>Total vacancies</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='d-flex align-items-start'>\r\n                                            <Badge color='light-primary' className='rounded p-75'>\r\n                                                <Briefcase className='font-medium-2' />\r\n                                            </Badge>\r\n                                            <div className='ms-75'>\r\n                                                <h4 className='mb-0'>568</h4>\r\n                                                <small>Applied vacancies</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <h4 className='fw-bolder border-bottom pb-50 mb-1'>Company Details</h4>\r\n                                    <div className='info-container'>\r\n                                        <Row>\r\n                                            <Col xl='7' xs='12'>\r\n                                                <Row tag='dl' className='mb-0'>\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Company Name:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {list?.name}\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Company Owner:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {selectedUser?.firstName} {selectedUser?.lastName}\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Website:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        <Badge>{list?.website}</Badge>\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        <Badge className='text-capitalize' color={statusColors[selectedUser?.isVerified === true ? 'active' : 'inactive']}>\r\n                                                            {selectedUser?.isVerified === true ? 'active' : 'inactive'}\r\n                                                        </Badge>\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Description:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {list?.description}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xl='5' xs='12'>\r\n                                                <Row tag='dl' className='mb-0'>\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Employes:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {list?.numberOfEmployees}\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Identity No:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {list?.compIdentityNumber}\r\n                                                    </Col>\r\n\r\n                                                    <Col tag='dt' sm='4' className='fw-bolder mb-1'>\r\n                                                        Address:\r\n                                                    </Col>\r\n                                                    <Col tag='dd' sm='8' className='mb-1'>\r\n                                                        {list?.address || 'Not Added'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </>\r\n                    )\r\n                })}\r\n                {selectedUser?.companies?.length === 0 &&\r\n                    <>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>No Company Created</CardTitle>\r\n                            </CardHeader>\r\n                        </Card>\r\n                    </>\r\n                }\r\n            </Fragment>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompanyDetails","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardTitle, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { User, Lock, Bookmark, Aperture } from 'react-feather'\r\n\r\n// ** User Components\r\nimport Application from './Application'\r\nimport UserTimeline from './UserTimeline'\r\nimport CompanyDetails from './CompanyDetails'\r\n\r\nconst UserTabs = ({ active, toggleTab, selectedUser }) => {\r\n  return (\r\n    <Fragment>\r\n      <Nav pills className='mb-2'>\r\n        <NavItem>\r\n          <NavLink active={active === '1'} onClick={() => toggleTab('1')}>\r\n            <User className='font-medium-3 me-50' />\r\n            <span className='fw-bold'>Account</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink active={active === '2'} onClick={() => toggleTab('2')}>\r\n            <Aperture className='font-medium-3 me-50' />\r\n            <span className='fw-bold'>Company</span>\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink active={active === '3'} onClick={() => toggleTab('3')}>\r\n            <Bookmark className='font-medium-3 me-50' />\r\n            <span className='fw-bold'>Application</span>\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={active}>\r\n        <TabPane tabId='1'>\r\n          {selectedUser?.resume?.length !== 0 ? (\r\n            selectedUser.resume.map((list, index) => {\r\n              return (\r\n                <span key={index}>\r\n                  <UserTimeline resume={list} selectedUser={selectedUser} />\r\n                </span>\r\n              )\r\n            })) : (\r\n            <>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle>No Resume Created</CardTitle>\r\n                </CardHeader>\r\n              </Card>\r\n            </>\r\n          )}\r\n          {/* <UserProjectsList />\r\n          <InvoiceList /> */}\r\n        </TabPane>\r\n        <TabPane tabId='2'>\r\n          <CompanyDetails selectedUser={selectedUser} />\r\n        </TabPane>\r\n        <TabPane tabId='3'>\r\n          <Application selectedUser={selectedUser} />\r\n        </TabPane>\r\n      </TabContent>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default UserTabs\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, Badge } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport { Check, Briefcase } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\n\r\nconst roleColors = {\r\n  job_seeker: 'light-info',\r\n  employer: 'light-danger',\r\n  freelancer: 'light-warning',\r\n  service: 'light-success',\r\n  admin: 'light-primary'\r\n}\r\n\r\nconst statusColors = {\r\n  active: 'light-success',\r\n  pending: 'light-warning',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nconst UserInfoCard = ({ selectedUser }) => {\r\n\r\n  // ** render user img\r\n  const renderUserImg = () => {\r\n    if (selectedUser !== null && selectedUser?.profilePictureUrl !== null) {\r\n      return (\r\n        <img\r\n          height='110'\r\n          width='110'\r\n          alt='user-avatar'\r\n          src={selectedUser?.profilePictureUrl}\r\n          className='img-fluid rounded mt-3 mb-2'\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <Avatar\r\n          initials\r\n          color={'light-primary'}\r\n          className='rounded mt-3 mb-2'\r\n          content={selectedUser?.firstName}\r\n          contentStyles={{\r\n            borderRadius: 0,\r\n            fontSize: 'calc(48px)',\r\n            width: '100%',\r\n            height: '100%'\r\n          }}\r\n          style={{\r\n            height: '110px',\r\n            width: '110px'\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <div className='user-avatar-section'>\r\n            <div className='d-flex align-items-center flex-column'>\r\n              {renderUserImg()}\r\n              <div className='d-flex flex-column align-items-center text-center'>\r\n                <div className='user-info'>\r\n                  <h4>{selectedUser?.firstName} {selectedUser?.lastName}</h4>\r\n                  {selectedUser !== null ? (\r\n                    <Badge color={roleColors[selectedUser?.role?.name]} className='text-capitalize'>\r\n                      {selectedUser?.role?.name}\r\n                    </Badge>\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='d-flex justify-content-around my-2 pt-75'>\r\n            <div className='d-flex align-items-start me-2'>\r\n              <Badge color='light-primary' className='rounded p-75'>\r\n                <Check className='font-medium-2' />\r\n              </Badge>\r\n              <div className='ms-75'>\r\n                <h4 className='mb-0'>1.23k</h4>\r\n                <small>Tasks Done</small>\r\n              </div>\r\n            </div>\r\n            <div className='d-flex align-items-start'>\r\n              <Badge color='light-primary' className='rounded p-75'>\r\n                <Briefcase className='font-medium-2' />\r\n              </Badge>\r\n              <div className='ms-75'>\r\n                <h4 className='mb-0'>568</h4>\r\n                <small>Projects Done</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <h4 className='fw-bolder border-bottom pb-50 mb-1'>Details</h4>\r\n          <div className='info-container'>\r\n            {selectedUser !== null ? (\r\n              <ul className='list-unstyled'>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Username:</span>\r\n                  <span>{selectedUser?.firstName} {selectedUser?.lastName}</span>\r\n                </li>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Email:</span>\r\n                  <span>{selectedUser?.emailAddress}</span>\r\n                </li>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Status:</span>\r\n                  <Badge className='text-capitalize' color={statusColors[selectedUser?.isVerified === true ? 'active' : 'inactive']}>\r\n                    {selectedUser?.isVerified === true ? 'active' : 'inactive'}\r\n                  </Badge>\r\n                </li>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Role:</span>\r\n                  <span className='text-capitalize'>{selectedUser?.role?.name}</span>\r\n                </li>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Contact:</span>\r\n                  <span>{selectedUser?.mobilePhone}</span>\r\n                </li>\r\n                <li className='mb-75'>\r\n                  <span className='fw-bolder me-25'>Address:</span>\r\n                  <span>{selectedUser?.address}</span>\r\n                </li>\r\n              </ul>\r\n            ) : null}\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UserInfoCard\r\n","// ** React Imports\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { getUser } from '../store'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Alert } from 'reactstrap'\r\n\r\n// ** User View Components\r\nimport UserTabs from './Tabs'\r\nimport UserInfoCard from './UserInfoCard'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UserView = () => {\r\n  // ** Store Vars\r\n  const store = useSelector(state => state.userList)\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Hooks\r\n  const { id } = useParams()\r\n\r\n  // ** Get suer on mount\r\n  useEffect(() => {\r\n    dispatch(getUser(id))\r\n  }, [dispatch])\r\n\r\n  const [active, setActive] = useState('1')\r\n\r\n  const toggleTab = tab => {\r\n    if (active !== tab) {\r\n      setActive(tab)\r\n    }\r\n  }\r\n\r\n  return store.selectedUser !== null && store.selectedUser !== undefined ? (\r\n    <div className='app-user-view'>\r\n      <Row>\r\n        <Col xl='4' lg='5' xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\r\n          <UserInfoCard selectedUser={store.selectedUser} />\r\n        </Col>\r\n        <Col xl='8' lg='7' xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\r\n          <UserTabs\r\n            active={active}\r\n            toggleTab={toggleTab}\r\n            selectedUser={store.selectedUser}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  ) : (\r\n    <Alert color='danger'>\r\n      <h4 className='alert-heading'>User not found</h4>\r\n      <div className='alert-body'>\r\n        User with id: {id} doesn't exist. Check list of all Users: <Link to='/apps/user/list'>Users List</Link>\r\n      </div>\r\n    </Alert>\r\n  )\r\n}\r\nexport default UserView\r\n","// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst Timeline = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Custom Tagg\n  const Tag = tag ? tag : 'ul'\n\n  return (\n    <Tag\n      className={classnames('timeline', {\n        [className]: className\n      })}\n    >\n      {data.map((item, i) => {\n        const ItemTag = item.tag ? item.tag : 'li'\n\n        return (\n          <ItemTag\n            key={i}\n            className={classnames('timeline-item', {\n              [item.className]: className\n            })}\n          >\n            <span\n              className={classnames('timeline-point', {\n                [`timeline-point-${item.color}`]: item.color,\n                'timeline-point-indicator': !item.icon\n              })}\n            >\n              {item.icon ? item.icon : null}\n            </span>\n            <div className='timeline-event'>\n              <div\n                className={classnames('d-flex justify-content-between flex-sm-row flex-column', {\n                  'mb-sm-0 mb-1': item.meta\n                })}\n              >\n                <h6>{item.title}</h6>\n                {item.meta ? (\n                  <span\n                    className={classnames('timeline-event-time', {\n                      [item.metaClassName]: item.metaClassName\n                    })}\n                  >\n                    {item.meta}\n                  </span>\n                ) : null}\n              </div>\n              <p\n                className={classnames({\n                  'mb-0': i === data.length - 1 && !item.customContent\n                })}\n              >\n                {item.content}\n              </p>\n              {item.customContent ? item.customContent : null}\n            </div>\n          </ItemTag>\n        )\n      })}\n    </Tag>\n  )\n}\n\nexport default Timeline\n\n// ** PropTypes\nTimeline.propTypes = {\n  tag: Proptypes.string,\n  className: Proptypes.string,\n  data: Proptypes.array.isRequired\n}\n"],"sourceRoot":""}