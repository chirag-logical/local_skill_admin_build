{"version":3,"sources":["../../src/FileSaver.js","views/extensions/import-export/Export.js","@core/components/extensions-header/index.js"],"names":["b","autoBom","console","test","Blob","type","status","MouseEvent","document","window","self","global","navigator","HTMLAnchorElement","name","location","setTimeout","f","open","i","saveAs","module","initialData","id","username","email","website","Export","tableRef","useRef","useState","data","value","setValue","modal","setModal","fileName","setFileName","filteredData","setFilteredData","fileFormat","setFileFormat","toggleModal","renderTableData","map","col","title","subTitle","link","className","sm","color","onClick","for","bsSize","onChange","e","dataArr","target","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleFilter","innerRef","responsive","isOpen","toggle","onClosed","placeholder","bookType","wb","utils","table_to_book","current","sheet","wbout","write","bookSST","file","FileSaver","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","handleExport","ExtensionsHeader","props","href","rel"],"mappings":"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","file":"static/js/135.5dd13a94.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Custom Components\nimport ExtensionsHeader from '@components/extensions-header'\n\n// ** Third Party Components\nimport { utils, write } from 'xlsx'\nimport * as FileSaver from 'file-saver'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Table,\n  Modal,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  ModalBody,\n  ModalHeader,\n  ModalFooter\n} from 'reactstrap'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst Export = () => {\n  // ** Ref\n  const tableRef = useRef()\n\n  // ** States\n  const [data] = useState(initialData)\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [filteredData, setFilteredData] = useState([])\n  const [fileFormat, setFileFormat] = useState('xlsx')\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleFilter = e => {\n    const dataArr = data\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = dataArr.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    }\n  }\n\n  const handleExport = () => {\n    toggleModal()\n    const bookType = fileFormat\n    const wb = utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\n    const wbout = write(wb, { bookType, bookSST: true, type: 'binary' })\n\n    const s2ab = s => {\n      const buf = new ArrayBuffer(s.length)\n      const view = new Uint8Array(buf)\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\n      return buf\n    }\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), file)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr key={col.id}>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/SheetJS/sheetjs'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex justify-content-between flex-wrap flex-sm-row flex-column'>\n                <Button color='primary' onClick={() => toggleModal()}>\n                  Export\n                </Button>\n                <div className='d-flex align-items-center justify-content-end mt-sm-0 mt-1'>\n                  <Label for='search-input' className='me-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table innerRef={tableRef} className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <div className='mb-2'>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </div>\n          <div>\n            <Input\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => setFileFormat(e.target.value)}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </Input>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Export\n","// ** React Imports\nimport Proptypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ms-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  link: Proptypes.string,\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}