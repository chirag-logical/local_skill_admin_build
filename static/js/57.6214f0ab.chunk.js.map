{"version":3,"sources":["views/userList/list/Sidebar.js","views/userList/list/columns.js","views/userList/list/Table.js","views/userList/list/index.js","@core/components/sidebar/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","SidebarNewUsers","open","toggleSidebar","useState","data","setData","plan","setPlan","role","setRole","dispatch","useDispatch","useForm","control","setValue","setError","handleSubmit","errors","formState","size","title","headerClassName","contentClassName","onClosed","key","onSubmit","Object","values","every","field","length","checkIsValid","addUser","avatar","status","currentPlan","billing","type","className","for","name","render","id","placeholder","invalid","color","isClearable","classNamePrefix","options","theme","selectThemeColors","classnames","onChange","e","target","outline","onClick","renderClient","row","profilePictureUrl","img","width","height","initials","content","firstName","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","cell","to","store","getUser","lastName","emailAddress","roleObj","job_seeker","class","icon","User","employer","Database","freelancer","Edit2","service","Settings","admin","Slack","Icon","renderRole","mobilePhone","address","slice","isVerified","pill","tag","Link","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","xl","htmlFor","style","UsersList","useSelector","state","userList","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","sidebarOpen","setSidebarOpen","useEffect","getAllData","getData","q","page","perPage","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","keys","some","k","allData","dataToRender","subHeaderComponent","val","parseInt","currentTarget","Sidebar","Table","props","children","closeBtn","bodyClassName","wrapperClassName","rest","renderCloseBtn","isOpen","toggle","modalClassName","undefined","String","close","wheelPropagation","StatsHorizontal","stats","renderStats","statTitle","statsMargin"],"mappings":"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","file":"static/js/57.6214f0ab.chunk.js","sourcesContent":["// ** React Import\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\n\n// ** Store & Actions\nimport { addUser } from '../store'\nimport { useDispatch } from 'react-redux'\n\nconst defaultValues = {\n  email: '',\n  contact: '',\n  company: '',\n  fullName: '',\n  username: '',\n  country: null\n}\n\nconst countryOptions = [\n  { label: 'Australia', value: 'Australia' },\n  { label: 'Bangladesh', value: 'Bangladesh' },\n  { label: 'Belarus', value: 'Belarus' },\n  { label: 'Brazil', value: 'Brazil' },\n  { label: 'Canada', value: 'Canada' },\n  { label: 'China', value: 'China' },\n  { label: 'France', value: 'France' },\n  { label: 'Germany', value: 'Germany' },\n  { label: 'India', value: 'India' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Israel', value: 'Israel' },\n  { label: 'Italy', value: 'Italy' },\n  { label: 'Japan', value: 'Japan' },\n  { label: 'Korea', value: 'Korea' },\n  { label: 'Mexico', value: 'Mexico' },\n  { label: 'Philippines', value: 'Philippines' },\n  { label: 'Russia', value: 'Russia' },\n  { label: 'South', value: 'South' },\n  { label: 'Thailand', value: 'Thailand' },\n  { label: 'Turkey', value: 'Turkey' },\n  { label: 'Ukraine', value: 'Ukraine' },\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\n  { label: 'United Kingdom', value: 'United Kingdom' },\n  { label: 'United States', value: 'United States' }\n]\n\nconst checkIsValid = data => {\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\n}\n\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\n  // ** States\n  const [data, setData] = useState(null)\n  const [plan, setPlan] = useState('basic')\n  const [role, setRole] = useState('subscriber')\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** Vars\n  const {\n    control,\n    setValue,\n    setError,\n    handleSubmit,\n    formState: { errors }\n  } = useForm({ defaultValues })\n\n  // ** Function to handle form submit\n  const onSubmit = data => {\n    setData(data)\n    if (checkIsValid(data)) {\n      toggleSidebar()\n      dispatch(\n        addUser({\n          role,\n          avatar: '',\n          status: 'active',\n          email: data.email,\n          currentPlan: plan,\n          billing: 'auto debit',\n          company: data.company,\n          contact: data.contact,\n          fullName: data.fullName,\n          username: data.username,\n          country: data.country.value\n        })\n      )\n    } else {\n      for (const key in data) {\n        if (data[key] === null) {\n          setError('country', {\n            type: 'manual'\n          })\n        }\n        if (data[key] !== null && data[key].length === 0) {\n          setError(key, {\n            type: 'manual'\n          })\n        }\n      }\n    }\n  }\n\n  const handleSidebarClosed = () => {\n    for (const key in defaultValues) {\n      setValue(key, '')\n    }\n    setRole('subscriber')\n    setPlan('basic')\n  }\n\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title='New User'\n      headerClassName='mb-1'\n      contentClassName='pt-0'\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <div className='mb-1'>\n          <Label className='form-label' for='fullName'>\n            Full Name <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='fullName'\n            control={control}\n            render={({ field }) => (\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='username'>\n            Username <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='username'\n            control={control}\n            render={({ field }) => (\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='userEmail'>\n            Email <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='email'\n            control={control}\n            render={({ field }) => (\n              <Input\n                type='email'\n                id='userEmail'\n                placeholder='john.doe@example.com'\n                invalid={errors.email && true}\n                {...field}\n              />\n            )}\n          />\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        </div>\n\n        <div className='mb-1'>\n          <Label className='form-label' for='contact'>\n            Contact <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='contact'\n            control={control}\n            render={({ field }) => (\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='company'>\n            Company <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='company'\n            control={control}\n            render={({ field }) => (\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country'>\n            Country <span className='text-danger'>*</span>\n          </Label>\n          <Controller\n            name='country'\n            control={control}\n            render={({ field }) => (\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\n              <Select\n                isClearable={false}\n                classNamePrefix='select'\n                options={countryOptions}\n                theme={selectThemeColors}\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\n                {...field}\n              />\n            )}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='user-role'>\n            User Role\n          </Label>\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\n            <option value='subscriber'>Subscriber</option>\n            <option value='editor'>Editor</option>\n            <option value='maintainer'>Maintainer</option>\n            <option value='author'>Author</option>\n            <option value='admin'>Admin</option>\n          </Input>\n        </div>\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\n          <Label className='form-label' for='select-plan'>\n            Select Plan\n          </Label>\n          <Input type='select' id='select-plan' name='select-plan'>\n            <option value='basic'>Basic</option>\n            <option value='enterprise'>Enterprise</option>\n            <option value='company'>Company</option>\n            <option value='team'>Team</option>\n          </Input>\n        </div>\n        <Button type='submit' className='me-1' color='primary'>\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n          Cancel\n        </Button>\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Store & Actions\nimport { store } from '@store/store'\nimport { getUser } from '../store'\n\n// ** Icons Imports\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\n// ** Renders Client Columns\nconst renderClient = (row) => {\n  if (row?.profilePictureUrl !== null) {\n    return <Avatar className='me-1' img={row?.profilePictureUrl} width='32' height='32' />\n  } else {\n    return (\n      <Avatar\n        initials\n        className='me-1'\n        color='light-primary'\n        content={row?.firstName}\n      />\n    )\n  }\n}\n\n// ** Renders Role Columns\nconst renderRole = row => {\n  const roleObj = {\n    job_seeker: {\n      class: 'text-primary',\n      icon: User\n    },\n    employer: {\n      class: 'text-success',\n      icon: Database\n    },\n    freelancer: {\n      class: 'text-info',\n      icon: Edit2\n    },\n    service: {\n      class: 'text-warning',\n      icon: Settings\n    },\n    admin: {\n      class: 'text-danger',\n      icon: Slack\n    }\n  }\n\n  const Icon = roleObj[row?.role?.name] ? roleObj[row?.role?.name]?.icon : Edit2\n\n  return (\n    <span className='text-truncate text-capitalize align-middle'>\n      <Icon size={18} className={`${roleObj[row?.role?.name] ? roleObj[row?.role?.name]?.class : ''} me-50`} />\n      {row?.role?.name}\n    </span>\n  )\n}\n\nconst statusObj = {\n  pending: 'light-warning',\n  active: 'light-success',\n  inactive: 'light-secondary'\n}\n\nexport const columns = [\n  {\n    name: 'User',\n    sortable: false,\n    minWidth: '250px',\n    sortField: 'fullName',\n    selector: row => row?.firstName,\n    cell: row => (\n      <div className='d-flex justify-content-left align-items-center'>\n        {renderClient(row)}\n        <div className='d-flex flex-column'>\n          <Link\n            to={`/apps/userList/view/${row?.id}`}\n            className='user_name text-truncate text-body'\n            onClick={() => store.dispatch(getUser(row?.id))}\n          >\n            <span className='fw-bolder'>{row?.firstName} {row?.lastName}</span>\n          </Link>\n          <small className='text-truncate text-muted mb-0'>{row?.emailAddress}</small>\n        </div>\n      </div>\n    )\n  },\n  {\n    name: 'Role',\n    sortable: false,\n    minWidth: '172px',\n    sortField: 'role',\n    selector: (row) => row?.role,\n    cell: (row) => renderRole(row)\n  },\n  {\n    name: 'Phone No',\n    minWidth: '138px',\n    sortable: false,\n    sortField: 'mobilePhone',\n    selector: row => row?.mobilePhone,\n    cell: row => <span className='text-capitalize'>{row?.mobilePhone}</span>\n  },\n  {\n    name: 'address',\n    minWidth: '230px',\n    sortable: false,\n    sortField: 'address',\n    selector: row => row?.address,\n    cell: row => <span className='text-capitalize'>{row?.address?.slice(0, 100)}</span>\n  },\n  {\n    name: 'Status',\n    minWidth: '138px',\n    sortable: false,\n    sortField: 'status',\n    selector: row => row?.isVerified,\n    cell: row => (\n      <Badge className='text-capitalize' color={statusObj[row?.isVerified === true ? 'active' : 'inactive']} pill>\n        {row?.isVerified === true ? 'active' : 'inactive'}\n      </Badge>\n    )\n  },\n  {\n    name: 'Actions',\n    minWidth: '100px',\n    cell: row => (\n      <div className='column-action'>\n        <UncontrolledDropdown>\n          <DropdownToggle tag='div' className='btn btn-sm'>\n            <MoreVertical size={14} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem\n              tag={Link}\n              className='w-100'\n              to={`/apps/userList/view/${row?.id}`}\n              onClick={() => store.dispatch(getUser(row?.id))}\n            >\n              <FileText size={14} className='me-50' />\n              <span className='align-middle'>Details</span>\n            </DropdownItem>\n            {/* <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\n              <Archive size={14} className='me-50' />\n              <span className='align-middle'>Edit</span>\n            </DropdownItem> */}\n            {/* <DropdownItem\n              tag='a'\n              href='/'\n              className='w-100'\n              onClick={e => {\n                e.preventDefault()\n                store.dispatch(deleteUser(row.id))\n              }}\n            >\n              <Trash2 size={14} className='me-50' />\n              <span className='align-middle'>Delete</span>\n            </DropdownItem> */}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    )\n  }\n]\n","// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Invoice List Sidebar\nimport Sidebar from './Sidebar'\n\n// ** Table Columns\nimport { columns } from './columns'\n\n// ** Store & Actions\nimport { getAllData, getData } from '../store'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport { ChevronDown } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n// ** Table Header\nconst CustomHeader = ({ handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-100'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.userList)\n\n  // ** States\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n\n  // ** Function to toggle sidebar\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  // ** Get data on mount\n  useEffect(() => {\n    dispatch(getAllData())\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }, [dispatch, store?.data?.length, sort, sortColumn, currentPage])\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: rowsPerPage,\n        page: page.selected + 1\n      })\n    )\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        perPage: value,\n        page: currentPage\n      })\n    )\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(store.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      q: searchTerm\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    if (store?.data?.length > 0) {\n      return store?.data\n    } else if (store?.data?.length === 0 && isFiltered) {\n      return []\n    } else {\n      return store?.allData\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n    dispatch(\n      getData({\n        sort,\n        sortColumn,\n        q: searchTerm,\n        page: currentPage,\n        perPage: rowsPerPage\n      })\n    )\n  }\n\n  return (\n    <Fragment>\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={columns}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                store={store}\n                searchTerm={searchTerm}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                toggleSidebar={toggleSidebar}\n              />\n            }\n          />\n        </div>\n      </Card>\n\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\n    </Fragment>\n  )\n}\n\nexport default UsersList\n","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n"],"sourceRoot":""}