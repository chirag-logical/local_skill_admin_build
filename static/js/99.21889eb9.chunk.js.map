{"version":3,"sources":["views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGroupMerged.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js","@core/components/input-password-toggle/index.js"],"names":["InputGroupBasic","className","size","placeholder","label","htmlFor","type","InputGroupSizes","InputGroupMerged","InputGroupButtons","md","sm","color","outline","InputGroupCbAndRadio","for","id","name","InputGroupDropdowns","useState","dropdownOpen","setDropdownOpen","dropdownIcon","setDropdownIcon","dropdownRight","setDropdownRight","isOpen","toggle","caret","disabled","divider","inputGroupBasic","inputGroupMerged","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroups","useEffect","Prism","highlightAll","title","data","code","InputGroupDropdown","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","setIsOpen","IconCode","CardBody","onClick","InputPasswordToggle","forwardRef","ref","hideIcon","showIcon","visible","iconSize","inputClassName","invalid","rest","inputVisibility","setInputVisibility","renderIcon","defaultProps"],"mappings":"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","file":"static/js/99.21889eb9.chunk.js","sourcesContent":["import { Fragment } from 'react'\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupBasic = () => {\n  return (\n    <Fragment>\n      <InputGroup className='mb-2'>\n        <InputGroupText>\n          <Search size={14} />\n        </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='mb-2'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n        <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup>\n        <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupBasic\n","import { Fragment } from 'react'\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\n\nconst InputGroupSizes = () => {\n  return (\n    <Fragment>\n      <InputGroup className='mb-1' size='lg'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup className='mb-1'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup size='sm'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupSizes\n","import { Fragment } from 'react'\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupMerged = () => {\n  return (\n    <Fragment>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>\n          <Search size={14} />\n        </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='merge-password' />\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n        <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup className='input-group-merge'>\n        <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputGroupMerged\n","import { Button, InputGroup, Input, Row, Col } from 'reactstrap'\nimport { Search } from 'react-feather'\n\nconst InputGroupButtons = () => {\n  return (\n    <Row>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <Input placeholder='Button on right side' />\n          <Button color='primary' outline>\n            Go\n          </Button>\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <Button color='primary' outline>\n            <Search size={12} />\n          </Button>\n          <Input type='text' placeholder='Button on both sides' />\n          <Button color='primary' outline>\n            Search !\n          </Button>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupButtons\n","import { InputGroup, InputGroupText, Row, Col, Input, Label } from 'reactstrap'\n\nconst InputGroupCbAndRadio = () => {\n  return (\n    <Row>\n      <Label for='col-cb'>Input Group with Checkbox</Label>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Label for='col-radio'>Input Group with Radio</Label>\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' name='inputGroupExampleRadio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupCbAndRadio\n","import { useState } from 'react'\n\nimport { Row, Col, Input, InputGroup, Dropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nimport { Edit } from 'react-feather'\n\nconst InputGroupDropdowns = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [dropdownIcon, setDropdownIcon] = useState(false)\n  const [dropdownRight, setDropdownRight] = useState(false)\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  const toggleDropdownIcon = () => {\n    setDropdownIcon(!dropdownIcon)\n  }\n  const toggleDropDownRight = () => {\n    setDropdownRight(!dropdownRight)\n  }\n\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\n            <DropdownToggle color='primary' caret outline>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\n            <DropdownToggle color='primary' caret outline>\n              <Edit size={12} />\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\n            <DropdownToggle color='primary' outline caret>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem className='w-100'>Action 1</DropdownItem>\n              <DropdownItem className='w-100' disabled>\n                Action\n              </DropdownItem>\n              <DropdownItem className='w-100' divider />\n              <DropdownItem className='w-100'>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupDropdowns\n","export const inputGroupBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupBasic = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='mb-2'>\n          <InputGroupText>\n            <Search size={14} />\n          </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='mb-2'>\n          <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n          <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='mb-2'>\n          <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='mb-2'>\n          <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup>\n          <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupBasic\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupMerged = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Search } from 'react-feather'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { InputGroup, Input, InputGroupText } from 'reactstrap'\n\nconst InputGroupMerged = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>\n            <Search size={14} />\n          </InputGroupText>\n        <Input placeholder='search...' />\n      </InputGroup>\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='basic-default-password' />\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>@</InputGroupText>\n        <Input placeholder='Username' />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n        <Input placeholder=\"Recipient's username\" />\n          <InputGroupText>@example.com</InputGroupText>\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>https://example.com/users/</InputGroupText>\n        <Input />\n      </InputGroup>\n      <InputGroup className='input-group-merge mb-2'>\n          <InputGroupText>$</InputGroupText>\n        <Input placeholder='100' />\n      </InputGroup>\n      <InputGroup className='input-group-merge'>\n          <InputGroupText>With textarea</InputGroupText>\n        <Input type='textarea' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupMerged\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupCBRadio = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { InputGroup, Input, InputGroupText, Row, Col, Input } from 'reactstrap'\n\nconst InputGroupCbAndRadio = () => {\n  return (\n    <Row>\n      <Col md='6' sm='12'>\n        <InputGroup>\n            <InputGroupText>\n              <input type='checkbox' />\n            </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n            <InputGroupText>\n              <input type='radio' />\n            </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <small className='fw-semibold w-100 ms-1 my-1'>Custom checkbox and radio</small>\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='checkbox' id='exampleCustomCheckbox' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n      <Col md='6' sm='12'>\n        <InputGroup>\n          <InputGroupText>\n            <div className='form-check'>\n              <Input type='radio' id='exampleCustomRadio' />\n            </div>\n          </InputGroupText>\n          <Input type='text' placeholder='Message' />\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupCbAndRadio\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupButtons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, InputGroup, Input,  Row, Col } from 'reactstrap'\nimport { Search } from 'react-feather'\n\nconst InputGroupButtons = () => {\n  return (\n    <Row>\n      <Col className='mb-1' lg='6' md='12'>\n        <InputGroup>\n          <Input />\n            <Button color='primary' outline>\n              Go\n            </Button>\n        </InputGroup>\n      </Col>\n      <Col className='mb-1' lg='6' md='12'>\n        <InputGroup>\n            <Button color='primary' outline>\n              <Search size={12} />\n            </Button>\n          <Input type='text' />\n            <Button color='primary' outline>\n              Search !\n            </Button>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupButtons\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupDropdowns = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Input,\n  Dropdown,\n\n  InputGroup,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\nimport { Edit } from 'react-feather'\n\nconst InputGroupDropdowns = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [dropdownIcon, setDropdownIcon] = useState(false)\n  const [dropdownRight, setDropdownRight] = useState(false)\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n  const toggleDropdownIcon = () => {\n    setDropdownIcon(!dropdownIcon)\n  }\n  const toggleDropDownRight = () => {\n    setDropdownRight(!dropdownRight)\n  }\n\n  return (\n    <Row>\n      <Col lg='6' md='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\n            <DropdownToggle color='primary' caret outline>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n        </InputGroup>\n      </Col>\n      <Col lg='6' md='12'>\n        <InputGroup>\n          <Dropdown isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\n            <DropdownToggle color='primary' caret outline>\n              <Edit size={12} />\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <Input />\n          <Dropdown isOpen={dropdownRight} toggle={toggleDropDownRight}>\n            <DropdownToggle color='primary' outline caret>\n              Action\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem>Action 1</DropdownItem>\n              <DropdownItem disabled>Action</DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem>Another Action</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n        </InputGroup>\n      </Col>\n    </Row>\n  )\n}\n\nexport default InputGroupDropdowns\n  `}\n    </code>\n  </pre>\n)\n\nexport const inputGroupSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\n\nconst InputGroupSizes = () => {\n  return (\n    <React.Fragment>\n      <InputGroup className='mb-1' size='lg'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup className='mb-1'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n\n      <InputGroup size='sm'>\n        <InputGroupText>@</InputGroupText>\n        <Input placeholder='username' />\n      </InputGroup>\n    </React.Fragment>\n  )\n}\n\nexport default InputGroupSizes\n  `}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport InputGroupBasic from './InputGroupBasic'\nimport InputGroupSizes from './InputGroupSizes'\nimport InputGroupMerged from './InputGroupMerged'\nimport InputGroupButtons from './InputGroupButtons'\nimport InputCbAndRadio from './InputGroupCbAndRadio'\nimport InputGroupDropdown from './InputGroupDropdown'\n\n// ** Source Code\nimport {\n  inputGroupBasic,\n  inputGroupSizes,\n  inputGroupMerged,\n  inputGroupCBRadio,\n  inputGroupButtons,\n  inputGroupDropdowns\n} from './InputGroupSourceCode'\n\nconst InputGroups = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  })\n  return (\n    <Fragment>\n      <Breadcrumbs title='Input Groups' data={[{ title: 'Form Elements' }, { title: 'InputGroups' }]} />\n      <Row className='match-height'>\n        <Col md='6' sm='12'>\n          <Card title='Basic' code={inputGroupBasic}>\n            <InputGroupBasic />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Merged' code={inputGroupMerged}>\n            <InputGroupMerged />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Sizing' code={inputGroupSizes}>\n            <InputGroupSizes />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Checkbox & Radio' code={inputGroupCBRadio}>\n            <InputCbAndRadio />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Input Group with Buttons' code={inputGroupButtons}>\n            <InputGroupButtons />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Input Group Dropdowns' code={inputGroupDropdowns}>\n            <InputGroupDropdown />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default InputGroups\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}