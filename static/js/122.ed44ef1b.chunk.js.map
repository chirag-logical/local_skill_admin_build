{"version":3,"sources":["views/components/dropdowns/DropdownFlat.js","views/components/dropdowns/DropdownBasic.js","views/components/dropdowns/DropdownSplit.js","views/components/dropdowns/DropdownSizes.js","views/components/dropdowns/DropdownOutline.js","views/components/dropdowns/DropdownGradient.js","views/components/dropdowns/DropdownDirections.js","views/components/dropdowns/DropdownVariations.js","views/components/dropdowns/DropdownControlled.js","views/components/dropdowns/DropdownUncontrolled.js","views/components/dropdowns/DropdownsSourceCode.js","views/components/dropdowns/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["DropdownFlat","className","color","caret","href","tag","onClick","e","preventDefault","DropdownBasic","DropdownSplit","end","divider","header","DropdownSizes","md","sm","size","DropdownOutline","outline","DropdownGradient","DropdownDirections","direction","icons","id","item","DropdownVariations","useState","formDropdown","setFormDropdown","activeIcon","setActiveIcon","renderIconItem","map","icon","toggleIcon","isOpen","toggle","onSubmit","for","type","placeholder","name","DropdownControlled","dropdownOpen","setDropdownOpen","disabled","DropdownUncontrolled","dropdownControlled","dropdownUncontrolled","dropdownBasic","dropdownSplit","dropdownOutline","dropdownFlat","dropdownGradient","dropdownSizes","dropdownDirections","dropdownVariations","Dropdowns","useEffect","Prism","highlightAll","title","data","code","BreadCrumbs","props","to","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","CardSnippet","children","noBody","iconCode","setIsOpen","IconCode","CardBody"],"mappings":"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","file":"static/js/122.ed44ef1b.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownFlat = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownFlat\n","// ** Reactstrap Imports\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownBasic = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownBasic\n","// ** Reactstrap Imports\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem header>Header</DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu end>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 1\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 2\n                </DropdownItem>\n                <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n                  Option 3\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default DropdownSizes\n","// ** Reactstrap Imports\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownOutline = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='secondary'>\n          Secondary\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='warning'>\n          Warning\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Separated Link\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownOutline\n","// ** Reactstrap Imports\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownGradient = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownGradient\n","// ** Reactstrap Imports\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownDirections = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Drop bottom right\n        </DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Drop Up\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='end'>\n        <DropdownToggle color='primary' caret>\n          Drop Right\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='start'>\n        <DropdownToggle color='primary' caret>\n          Drop Left\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 3\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownDirections\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  ButtonDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\n// ** Icons Imports\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\n\nconst icons = [\n  {\n    id: 1,\n    item: <WifiOff size={15} />\n  },\n  {\n    id: 2,\n    item: <VolumeX size={15} />\n  },\n  {\n    id: 3,\n    item: <Volume2 size={15} />\n  },\n  {\n    id: 4,\n    item: <Bell size={15} />\n  },\n  {\n    id: 5,\n    item: <BellOff size={15} />\n  },\n  {\n    id: 6,\n    item: <PhoneOff size={15} />\n  }\n]\n\nconst DropdownVariations = () => {\n  // ** States\n  const [formDropdown, setFormDropdown] = useState(false)\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\n\n  const toggleIcon = icon => setActiveIcon(icon)\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\n\n  const renderIconItem = icons.map(icon => {\n    return (\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\n        {icon.item}\n      </DropdownItem>\n    )\n  })\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Group\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\n            Group 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\n            Group 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header onClick={e => e.preventDefault()}>\n            Group 3\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n            Option 2\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\n        <Button color='primary'>Icons</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\n          {activeIcon}\n        </DropdownToggle>\n        <DropdownMenu tag='div' end>\n          {renderIconItem}\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\n        <DropdownToggle color='primary' caret>\n          Form\n        </DropdownToggle>\n        <DropdownMenu>\n          <Form\n            className='px-2 py-2'\n            onSubmit={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            <div className='mb-2'>\n              <Label className='form-label' for='ddEmail'>\n                Email\n              </Label>\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\n            </div>\n            <div className='mb-2'>\n              <Label className='form-label' for='ddPassword'>\n                Password\n              </Label>\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\n            </div>\n            <div className='form-check mb-2'>\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\n              <Label className='form-check-label' for='ddCheck'>\n                Remember Me\n              </Label>\n            </div>\n            <Button color='primary' type='submit'>\n              Sign In\n            </Button>\n          </Form>\n          <DropdownItem divider />\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            New around here? Sign up\n          </DropdownItem>\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            Forgot password?\n          </DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownVariations\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  // ** States\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n          Option 1\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' disabled onClick={e => e.preventDefault()}>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n          Option 3\n        </DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled\n","// ** Reactstrap Imports\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownUncontrolled = () => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle color='primary' caret>\n        Uncontrolled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n          Option 1\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' disabled onClick={e => e.preventDefault()}>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a' onClick={e => e.preventDefault()}>\n          Option 3\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}\nexport default DropdownUncontrolled\n","export const dropdownControlled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nconst DropdownControlled = () => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\nconst toggleDropdown = () => {\n  setDropdownOpen(!dropdownOpen)\n}\n\n  return (\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\n      <DropdownToggle color='primary' caret>\n        Controlled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\nexport default DropdownControlled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownUncontrolled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownUncontrolled = () => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle color='primary' caret>\n        Uncontrolled\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n        <DropdownItem href='/' tag='a' disabled>\n          Option 2\n        </DropdownItem>\n        <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}\nexport default DropdownUncontrolled`}\n    </code>\n  </pre>\n)\n\nexport const dropdownBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownBasic = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownBasic`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSplit = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownSplit = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <Button color='primary'>Primary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='secondary'>Secondary</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='success'>Success</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='success' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='warning'>Warning</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='danger'>Danger</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='danger' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='info'>Info</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='info' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button color='dark'>Dark</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='dark' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownSplit`}\n    </code>\n  </pre>\n)\n\nexport const dropdownOutline = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownOutline = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='secondary'>\n          Secondary\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='secondary' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <Button outline color='warning'>\n          Warning\n        </Button>\n        <DropdownToggle outline className='dropdown-toggle-split' color='warning' caret></DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle outline color='info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n          <DropdownItem divider></DropdownItem>\n          <DropdownItem href='/' tag='a'>Separated Link</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownOutline`}\n    </code>\n  </pre>\n)\n\nexport const dropdownFlat = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownFlat = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-primary' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-secondary' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-success' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-warning' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-danger' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-info' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='flat-dark' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownFlat`}\n    </code>\n  </pre>\n)\n\nexport const dropdownGradient = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownGradient = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-primary' color='none' caret>\n          Primary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-secondary' color='none' caret>\n          Secondary\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-success' color='none' caret>\n          Success\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-warning' color='none' caret>\n          Warning\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-danger' color='none' caret>\n          Danger\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-info' color='none' caret>\n          Info\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle className='btn-gradient-dark' color='none' caret>\n          Dark\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownGradient`}\n    </code>\n  </pre>\n)\n\nexport const dropdownSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Button, UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle, Row, Col } from 'reactstrap'\n\nconst DropdownSizes = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='lg' caret>\n                Large\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' caret>\n                Default\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n            <UncontrolledButtonDropdown>\n              <DropdownToggle color='primary' size='sm' caret>\n                Small\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n        <Col md='6' sm='12'>\n          <div className='demo-inline-spacing'>\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='lg'>\n                Large\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret size='lg'></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary'>Default</Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>{' '}\n            <UncontrolledButtonDropdown>\n              <Button color='primary' size='sm'>\n                Small\n              </Button>\n              <DropdownToggle className='dropdown-toggle-split' color='primary' caret></DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n                <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n        </Col>\n      </Row>\n    </React.Fragment>\n  )\n}\nexport default DropdownSizes`}\n    </code>\n  </pre>\n)\n\nexport const dropdownDirections = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { UncontrolledButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap'\n\nconst DropdownDirections = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown>\n        <DropdownToggle color='primary' caret>\n          Drop bottom right\n        </DropdownToggle>\n        <DropdownMenu end>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Drop Up\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='end'>\n        <DropdownToggle color='primary' caret>\n          Drop Right\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown direction='start'>\n        <DropdownToggle color='primary' caret>\n          Drop Left\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a'>Option 1</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 2</DropdownItem>\n          <DropdownItem href='/' tag='a'>Option 3</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n    </div>\n  )\n}\nexport default DropdownDirections`}\n    </code>\n  </pre>\n)\n\nexport const dropdownVariations = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport { useState } from 'react'\nimport {\n  Form,\n  Label,\n  Input,\n  Button,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  ButtonDropdown,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\nimport { Wifi, WifiOff, PhoneOff, BellOff, Bell, VolumeX, Volume2 } from 'react-feather'\n\nconst icons = [\n  {\n    id: 1,\n    item: <WifiOff size={15} />\n  },\n  {\n    id: 2,\n    item: <VolumeX size={15} />\n  },\n  {\n    id: 3,\n    item: <Volume2 size={15} />\n  },\n  {\n    id: 4,\n    item: <Bell size={15} />\n  },\n  {\n    id: 5,\n    item: <BellOff size={15} />\n  },\n  {\n    id: 6,\n    item: <PhoneOff size={15} />\n  }\n]\n\nconst DropdownVariations = () => {\n  const [formDropdown, setFormDropdown] = useState(false)\n  const [activeIcon, setActiveIcon] = useState(<Wifi size={15} />)\n\n  const toggleIcon = icon => setActiveIcon(icon)\n  const toggleFormDropdown = () => setFormDropdown(!formDropdown)\n\n  const renderIconItem = icons.map(icon => {\n    return (\n      <DropdownItem tag='span' key={icon.id} onClick={() => toggleIcon(icon.item)}>\n        {icon.item}\n      </DropdownItem>\n    )\n  })\n  return (\n    <div className='demo-inline-spacing'>\n      <UncontrolledButtonDropdown direction='up'>\n        <DropdownToggle color='primary' caret>\n          Group\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem href='/' tag='a' header>\n            Group 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 2\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem href='/' tag='a' header>\n            Group 3\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 1\n          </DropdownItem>\n          <DropdownItem href='/' tag='a'>\n            Option 2\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <UncontrolledButtonDropdown className='dropdown-icon-wrapper' direction='up'>\n        <Button color='primary'>Icons</Button>\n        <DropdownToggle className='dropdown-toggle-split' color='primary' caret>\n          {activeIcon}\n        </DropdownToggle>\n        <DropdownMenu tag='div' end>\n          {renderIconItem}\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n\n      <ButtonDropdown isOpen={formDropdown} toggle={toggleFormDropdown} direction='up'>\n        <DropdownToggle color='primary' caret>\n          Form\n        </DropdownToggle>\n        <DropdownMenu>\n          <Form\n            className='px-2 py-2'\n            onSubmit={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            <div className='mb-2'>\n              <Label className='form-label' for='ddEmail'>Email</Label>\n              <Input type='email' placeholder='Email' name='ddemail' id='ddEmail' />\n            </div>\n            <div className='mb-2'>\n              <Label className='form-label' for='ddPassword'>Password</Label>\n              <Input type='password' placeholder='Password' name='ddPassword' id='ddPassword' />\n            </div>\n            <div className='form-check mb-2'>\n              <Input type='checkbox' name='ddCheck' id='ddCheck' />\n              <Label className='form-check-label' for='ddCheck'>Remember Me</Label>\n            </div>\n            <Button color='primary' type='submit'>\n              Sign In\n            </Button>\n          </Form>\n          <DropdownItem divider />\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            New around here? Sign up\n          </DropdownItem>\n          <DropdownItem\n            href='/'\n            tag='a'\n            href='#'\n            onClick={e => {\n              e.preventDefault()\n              setFormDropdown(false)\n            }}\n          >\n            Forgot password?\n          </DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    </div>\n  )\n}\n\nexport default DropdownVariations`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Demo Components\nimport DropdownFlat from './DropdownFlat'\nimport DropdownBasic from './DropdownBasic'\nimport DropdownSplit from './DropdownSplit'\nimport DropdownSizes from './DropdownSizes'\nimport DropdownOutline from './DropdownOutline'\nimport DropdownGradient from './DropdownGradient'\nimport DropdownDirections from './DropdownDirections'\nimport DropdownVariations from './DropdownVariations'\nimport DropdownControlled from './DropdownControlled'\nimport DropdownUncontrolled from './DropdownUncontrolled'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Source Code\nimport {\n  dropdownFlat,\n  dropdownBasic,\n  dropdownSizes,\n  dropdownSplit,\n  dropdownOutline,\n  dropdownGradient,\n  dropdownDirections,\n  dropdownVariations,\n  dropdownControlled,\n  dropdownUncontrolled\n} from './DropdownsSourceCode'\n\nconst Dropdowns = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Dropdowns' data={[{ title: 'Components' }, { title: 'Dropdowns' }]} />\n      <Row>\n        <Col md='6' sm='12'>\n          <Card title='Controlled Dropdown' code={dropdownControlled}>\n            <CardText>If you want to use controlled dropdown you'll have to manage state for it.</CardText>\n            <DropdownControlled />\n          </Card>\n        </Col>\n        <Col md='6' sm='12'>\n          <Card title='Uncontrolled Dropdown' code={dropdownUncontrolled}>\n            <CardText>With uncontrolled dropdown you won't have to manage state.</CardText>\n            <DropdownUncontrolled />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Basic' code={dropdownBasic}>\n            <DropdownBasic />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Split' code={dropdownSplit}>\n            <CardText className='mb-0'>\n              Use class <code>.dropdown-toggle-split</code> and add a split button within your dropdown to create a\n              dropdownSplit\n            </CardText>\n            <DropdownSplit />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Outline' code={dropdownOutline}>\n            <CardText className='mb-0'>\n              Use <code>.outline</code> attribute with button to create outline dropdown.\n            </CardText>\n            <DropdownOutline />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Flat' code={dropdownFlat}>\n            <CardText className='mb-0'>\n              Use class <code>color=\"flat-*\"</code> to create a flat dropdown.\n            </CardText>\n            <DropdownFlat />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Gradient' code={dropdownGradient}>\n            <CardText className='mb-0'>\n              Use class <code>btn-gradient-*</code> to create a gradient dropdown.\n            </CardText>\n            <DropdownGradient />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Sizes' code={dropdownSizes}>\n            <CardText className='mb-0'>\n              Use class <code>.btn-[lg/sm]</code> to create a small or large dropdown.\n            </CardText>\n            <DropdownSizes />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Directions' code={dropdownDirections}>\n            <CardText className='mb-0'>\n              You can use drop from different direction to use drop from <code>bottom right</code> use right prop with\n              your dropdown-menu. for drop directions use <code>direction=[up/start/end]</code>\n            </CardText>\n            <DropdownDirections />\n          </Card>\n        </Col>\n        <Col sm='12'>\n          <Card title='Variations' code={dropdownVariations}>\n            <CardText>\n              To create a dropdown with groups you can use prop <code>header</code> for the header of groups and for\n              separation of group you can use prop <code>divider</code>.\n            </CardText>\n            <CardText className='mb-0'>\n              To create a dropdown with icons use class <code>.dropdown-icon-wrapper</code> with your dropdown.\n            </CardText>\n            <DropdownVariations />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Dropdowns\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}