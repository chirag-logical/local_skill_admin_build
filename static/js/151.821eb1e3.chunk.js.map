{"version":3,"sources":["views/ui-elements/page-layouts/LayoutEmpty.js","@core/components/breadcrumbs/index.js"],"names":["LayoutEmpty","title","data","color","className","href","target","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","size","end"],"mappings":"uJAAA,2CAgCeA,UAvBK,WAClB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,MAAM,eAAeC,KAAM,CAAC,CAAED,MAAO,WAAa,CAAEA,MAAO,mBACxE,cAAC,IAAD,CAAOE,MAAM,UAAb,SACE,sBAAKC,UAAU,aAAf,UACE,sBAAMA,UAAU,UAAhB,oBACA,8HAC6F,IAC3F,mBACEC,KAAK,8GACLC,OAAO,SAFT,wCAKK,IAPP,iC,0ICuEKC,IApEK,SAAAC,GAElB,IAAQN,EAAgBM,EAAhBN,KAAMD,EAAUO,EAAVP,MAmBd,OACE,sBAAKG,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGH,EAAQ,oBAAIG,UAAU,wCAAd,SAAuDH,IAAc,GAC9E,qBAAKG,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBK,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAzBPR,EAAKS,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKG,KAAOC,IAAOC,WAC7BC,EAAahB,EAAKiB,OAAS,IAAMN,EACvC,OACE,cAAC,IAAD,CACEJ,IAAI,KAEJW,QAASF,EACTd,UAAWiB,IAAW,CAAE,gBAAiBH,IAJ3C,SAME,cAACJ,EAAD,2BAAcF,EAAKG,KAAO,CAAEL,GAAIE,EAAKG,MAAS,IAA9C,aAAoDH,EAAKX,UAJpDY,kBA2BT,qBAAKT,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBD,MAAM,UAAUC,UAAU,qCAA1C,SACE,cAAC,IAAD,CAAMkB,KAAM,OAEd,eAAC,IAAD,CAAcb,IAAI,KAAKc,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcd,IAAKO,IAAMN,GAAG,aAA5B,UACE,cAAC,IAAD,CAAaN,UAAU,OAAOkB,KAAM,KACpC,sBAAMlB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcK,IAAKO,IAAMN,GAAG,aAA5B,UACE,cAAC,IAAD,CAAeN,UAAU,OAAOkB,KAAM,KACtC,sBAAMlB,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcK,IAAKO,IAAMN,GAAG,cAA5B,UACE,cAAC,IAAD,CAAMN,UAAU,OAAOkB,KAAM,KAC7B,sBAAMlB,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcK,IAAKO,IAAMN,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAUN,UAAU,OAAOkB,KAAM,KACjC,sBAAMlB,UAAU,eAAhB","file":"static/js/151.821eb1e3.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Reactstrap Imports\nimport { Alert } from 'reactstrap'\n\nconst LayoutEmpty = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Layout Empty' data={[{ title: 'Layouts' }, { title: 'Layout Empty' }]} />\n      <Alert color='primary'>\n        <div className='alert-body'>\n          <span className='fw-bold'>Info: </span>\n          <span>\n            This layout can be useful for getting started with empty content section. Please check the{' '}\n            <a\n              href='https://pixinvent.com/demo/vuexy-react-admin-dashboard-template/documentation/docs/development/page-layouts'\n              target='_blank'\n            >\n              Layout empty documentation\n            </a>{' '}\n            for more details.\n          </span>\n        </div>\n      </Alert>\n    </Fragment>\n  )\n}\n\nexport default LayoutEmpty\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}