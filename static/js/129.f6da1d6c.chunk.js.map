{"version":3,"sources":["views/components/progress/ProgressBasic.js","views/components/progress/ProgressColored.js","views/components/progress/ProgressLabeled.js","views/components/progress/ProgressStriped.js","views/components/progress/ProgressAnimated.js","views/components/progress/ProgressMultipleStacked.js","views/components/progress/ProgressSourceCode.js","views/components/progress/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["ProgressBasic","className","value","ProgressColored","ProgressLabeled","ProgressStriped","striped","ProgressAnimated","animated","ProgressMultipleStacked","multi","bar","color","progressBasic","progressColored","progressMultipleStacked","progressLabeled","progressStriped","progressAnimated","Progress","useEffect","Prism","highlightAll","title","data","lg","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","size","end","CardSnippet","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/129.f6da1d6c.chunk.js","sourcesContent":["// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressBasic = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <div>\n        <span>Reticulating splines… 0%</span>\n        <Progress />\n      </div>\n      <div>\n        <span>Reticulating splines… 25%</span>\n        <Progress value='25' />\n      </div>\n      <div>\n        <span>Reticulating splines… 50%</span>\n        <Progress value={50} />\n      </div>\n      <div>\n        <span>Reticulating splines… 75%</span>\n        <Progress value={75} />\n      </div>\n      <div>\n        <span>Reticulating splines… 100%</span>\n        <Progress value='100' />\n      </div>\n    </div>\n  )\n}\nexport default ProgressBasic\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressColored = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value={25} />\n      <Progress className='progress-bar-secondary' value={35} />\n      <Progress className='progress-bar-success' value={45} />\n      <Progress className='progress-bar-danger' value={55} />\n      <Progress className='progress-bar-warning' value={65} />\n      <Progress className='progress-bar-info' value={75} />\n      <Progress className='progress-bar-dark' value={85} />\n    </div>\n  )\n}\nexport default ProgressColored\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressLabeled = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value='25'>25%</Progress>\n      <Progress value='35' className='progress-bar-secondary'>\n        35%\n      </Progress>\n      <Progress value='45' className='progress-bar-success'>\n        45%\n      </Progress>\n      <Progress value='55' className='progress-bar-danger'>\n        55%\n      </Progress>\n      <Progress className='progress-bar-warning' value='65'>\n        65%\n      </Progress>\n      <Progress className='progress-bar-info' value='75'>\n        75%\n      </Progress>\n      <Progress className='progress-bar-dark' value='85'>\n        85%\n      </Progress>\n    </div>\n  )\n}\nexport default ProgressLabeled\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressStriped = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </div>\n  )\n}\nexport default ProgressStriped\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressAnimated = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress animated striped value={20} />\n      <Progress animated striped className='progress-bar-success' value={40} />\n      <Progress animated striped className='progress-bar-danger' value={60} />\n      <Progress animated striped className='progress-bar-warning' value={80} />\n      <Progress animated striped className='progress-bar-info' value={100} />\n    </div>\n  )\n}\nexport default ProgressAnimated\n","// ** Reactstrap Imports\nimport { Progress } from 'reactstrap'\n\nconst ProgressMultipleStacked = () => {\n  return (\n    <Progress multi>\n      <Progress bar color='danger' value='15'>\n        15%\n      </Progress>\n      <Progress bar color='warning' value='50'>\n        50%\n      </Progress>\n      <Progress bar color='primary' value='10'>\n        10%\n      </Progress>\n    </Progress>\n  )\n}\nexport default ProgressMultipleStacked\n","export const progressBasic = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\nconst ProgressBasic = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <div>\n        <span>Reticulating splines… 0%</span>\n        <Progress />\n      </div>\n      <div>\n        <span>Reticulating splines… 25%</span>\n        <Progress value='25' />\n      </div>\n      <div>\n        <span>Reticulating splines… 50%</span>\n        <Progress value={50} />\n      </div>\n      <div>\n        <span>Reticulating splines… 75%</span>\n        <Progress value={75} />\n      </div>\n      <div>\n        <span>Reticulating splines… 100%</span>\n        <Progress value='100' />\n      </div>\n    </div>\n  )\n}\nexport default ProgressBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const progressColored = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressColored = () => {\n  return (\n    <React.Fragment>\n      <Progress value={25} />\n      <Progress className='progress-bar-secondary' value={35} />\n      <Progress className='progress-bar-success' value={45} />\n      <Progress className='progress-bar-danger' value={55} />\n      <Progress className='progress-bar-warning' value={65} />\n      <Progress className='progress-bar-info' value={75} />\n      <Progress className='progress-bar-dark' value={85} />\n    </React.Fragment>\n  )\n}\nexport default ProgressColored\n`}\n    </code>\n  </pre>\n)\n\nexport const progressMultipleStacked = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressMultipleStacked = () => {\n  return (\n     <Progress multi>\n        <Progress bar color='danger' value='15'>\n          15%\n        </Progress>\n        <Progress bar color='warning' value='50'>\n          50%\n        </Progress>\n        <Progress bar color='primary' value='10'>\n          10%\n        </Progress>\n    </Progress>\n  )\n}\nexport default ProgressMultipleStacked\n`}\n    </code>\n  </pre>\n)\n\nexport const progressLabeled = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressLabeled = () => {\n  return (\n    <div className='demo-vertical-spacing'>\n      <Progress value='25'>25%</Progress>\n      <Progress value='35' className='progress-bar-secondary'>\n        35%\n      </Progress>\n      <Progress value='45' className='progress-bar-success'>\n        45%\n      </Progress>\n      <Progress value='55' className='progress-bar-danger'>\n        55%\n      </Progress>\n      <Progress className='progress-bar-warning' value='65'>\n        65%\n      </Progress>\n      <Progress className='progress-bar-info' value='75'>\n        75%\n      </Progress>\n      <Progress className='progress-bar-dark' value='85'>\n        85%\n      </Progress>\n    </div>\n  )\n}\nexport default ProgressLabeled\n`}\n    </code>\n  </pre>\n)\n\nexport const progressStriped = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\nconst ProgressStriped = () => {\n  return (\n    <React.Fragment>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </React.Fragment>\n  )\n}\nexport default ProgressStriped\n`}\n    </code>\n  </pre>\n)\n\nexport const progressAnimated = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport { Progress } from 'reactstrap'\n\nconst ProgressAnimated = () => {\n  return (\n    <React.Fragment>\n      <Progress striped value={20} />\n      <Progress striped className='progress-bar-success' value={40} />\n      <Progress striped className='progress-bar-danger' value={60} />\n      <Progress striped className='progress-bar-warning' value={80} />\n      <Progress striped className='progress-bar-info' value={100} />\n    </React.Fragment>\n  )\n}\nexport default ProgressAnimated\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport ProgressBasic from './ProgressBasic'\nimport ProgressColored from './ProgressColored'\nimport ProgressLabeled from './ProgressLabeled'\nimport ProgressStriped from './ProgressStriped'\nimport ProgressAnimated from './ProgressAnimated'\nimport ProgressMultipleStacked from './ProgressMultipleStacked'\n\n// ** Source Code\nimport {\n  progressBasic,\n  progressColored,\n  progressLabeled,\n  progressStriped,\n  progressAnimated,\n  progressMultipleStacked\n} from './ProgressSourceCode'\n\nconst Progress = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Progress' data={[{ title: 'Components' }, { title: 'Progress' }]} />\n      <Row>\n        <Col lg='12'>\n          <Card title='Basic Progress' code={progressBasic}>\n            <ProgressBasic />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Colored Progress' code={progressColored}>\n            <CardText>\n              Use <code>progress-bar-[color]</code> class with progress to change progress color.\n            </CardText>\n            <ProgressColored />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Labeled Progress' code={progressLabeled}>\n            <CardText>Add text between progress tag to create a labeled progress bar.</CardText>\n            <ProgressLabeled />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Multiple Stacked' code={progressMultipleStacked}>\n            <CardText>\n              To create a multi colored progress wrap all of your progresses in with <code>multi</code> prop.\n            </CardText>\n            <ProgressMultipleStacked />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Striped Progress' code={progressStriped}>\n            <CardText>\n              Use <code>striped</code> prop with progress to create a striped progress bar.\n            </CardText>\n            <ProgressStriped />\n          </Card>\n        </Col>\n        <Col lg='12'>\n          <Card title='Animated Progress' code={progressAnimated}>\n            <CardText>\n              Use <code>animated</code> prop with progress to animate progress bar.\n            </CardText>\n            <ProgressAnimated />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Progress\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}