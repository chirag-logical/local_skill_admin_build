{"version":3,"sources":["views/apps/user/list/Sidebar.js","views/apps/user/list/columns.js","views/apps/user/list/Table.js","views/apps/user/list/index.js","@core/components/sidebar/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["defaultValues","email","contact","company","fullName","username","country","countryOptions","label","value","SidebarNewUsers","open","toggleSidebar","useState","data","setData","plan","setPlan","role","setRole","dispatch","useDispatch","useForm","control","setValue","setError","handleSubmit","errors","formState","size","title","headerClassName","contentClassName","onClosed","key","onSubmit","Object","values","every","field","length","checkIsValid","addUser","avatar","status","currentPlan","billing","type","className","for","name","render","id","placeholder","invalid","color","isClearable","classNamePrefix","options","theme","selectThemeColors","classnames","onChange","e","target","outline","onClick","renderClient","row","img","width","height","initials","avatarColor","content","statusObj","pending","active","inactive","columns","sortable","minWidth","sortField","selector","cell","to","store","getUser","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","renderRole","pill","tag","Link","href","preventDefault","deleteUser","CustomHeader","handlePerPage","rowsPerPage","handleFilter","searchTerm","downloadCSV","array","link","document","createElement","csv","result","keys","join","forEach","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","xl","htmlFor","style","caret","UsersList","useSelector","state","users","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","sidebarOpen","setSidebarOpen","currentRole","setCurrentRole","setCurrentPlan","number","currentStatus","setCurrentStatus","useEffect","getAllData","getData","q","page","perPage","md","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","isFiltered","some","k","allData","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","Sidebar","lg","sm","StatsHorizontal","statTitle","renderStats","Table","props","children","closeBtn","bodyClassName","wrapperClassName","rest","renderCloseBtn","isOpen","toggle","modalClassName","undefined","String","close","wheelPropagation","stats","statsMargin"],"mappings":"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","file":"static/js/56.ff16cf78.chunk.js","sourcesContent":["// ** React Import\r\nimport { useState } from 'react'\r\n\r\n// ** Custom Components\r\nimport Sidebar from '@components/sidebar'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport classnames from 'classnames'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n// ** Reactstrap Imports\r\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\r\n\r\n// ** Store & Actions\r\nimport { addUser } from '../store'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst defaultValues = {\r\n  email: '',\r\n  contact: '',\r\n  company: '',\r\n  fullName: '',\r\n  username: '',\r\n  country: null\r\n}\r\n\r\nconst countryOptions = [\r\n  { label: 'Australia', value: 'Australia' },\r\n  { label: 'Bangladesh', value: 'Bangladesh' },\r\n  { label: 'Belarus', value: 'Belarus' },\r\n  { label: 'Brazil', value: 'Brazil' },\r\n  { label: 'Canada', value: 'Canada' },\r\n  { label: 'China', value: 'China' },\r\n  { label: 'France', value: 'France' },\r\n  { label: 'Germany', value: 'Germany' },\r\n  { label: 'India', value: 'India' },\r\n  { label: 'Indonesia', value: 'Indonesia' },\r\n  { label: 'Israel', value: 'Israel' },\r\n  { label: 'Italy', value: 'Italy' },\r\n  { label: 'Japan', value: 'Japan' },\r\n  { label: 'Korea', value: 'Korea' },\r\n  { label: 'Mexico', value: 'Mexico' },\r\n  { label: 'Philippines', value: 'Philippines' },\r\n  { label: 'Russia', value: 'Russia' },\r\n  { label: 'South', value: 'South' },\r\n  { label: 'Thailand', value: 'Thailand' },\r\n  { label: 'Turkey', value: 'Turkey' },\r\n  { label: 'Ukraine', value: 'Ukraine' },\r\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\r\n  { label: 'United Kingdom', value: 'United Kingdom' },\r\n  { label: 'United States', value: 'United States' }\r\n]\r\n\r\nconst checkIsValid = data => {\r\n  return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\r\n}\r\n\r\nconst SidebarNewUsers = ({ open, toggleSidebar }) => {\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n  const [plan, setPlan] = useState('basic')\r\n  const [role, setRole] = useState('subscriber')\r\n\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  // ** Vars\r\n  const {\r\n    control,\r\n    setValue,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({ defaultValues })\r\n\r\n  // ** Function to handle form submit\r\n  const onSubmit = data => {\r\n    setData(data)\r\n    if (checkIsValid(data)) {\r\n      toggleSidebar()\r\n      dispatch(\r\n        addUser({\r\n          role,\r\n          avatar: '',\r\n          status: 'active',\r\n          email: data.email,\r\n          currentPlan: plan,\r\n          billing: 'auto debit',\r\n          company: data.company,\r\n          contact: data.contact,\r\n          fullName: data.fullName,\r\n          username: data.username,\r\n          country: data.country.value\r\n        })\r\n      )\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] === null) {\r\n          setError('country', {\r\n            type: 'manual'\r\n          })\r\n        }\r\n        if (data[key] !== null && data[key].length === 0) {\r\n          setError(key, {\r\n            type: 'manual'\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSidebarClosed = () => {\r\n    for (const key in defaultValues) {\r\n      setValue(key, '')\r\n    }\r\n    setRole('subscriber')\r\n    setPlan('basic')\r\n  }\r\n\r\n  return (\r\n    <Sidebar\r\n      size='lg'\r\n      open={open}\r\n      title='New User'\r\n      headerClassName='mb-1'\r\n      contentClassName='pt-0'\r\n      toggleSidebar={toggleSidebar}\r\n      onClosed={handleSidebarClosed}\r\n    >\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='fullName'>\r\n            Full Name <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='fullName'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='fullName' placeholder='John Doe' invalid={errors.fullName && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='username'>\r\n            Username <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='username'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='username' placeholder='johnDoe99' invalid={errors.username && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='userEmail'>\r\n            Email <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='email'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input\r\n                type='email'\r\n                id='userEmail'\r\n                placeholder='john.doe@example.com'\r\n                invalid={errors.email && true}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\r\n        </div>\r\n\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='contact'>\r\n            Contact <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='contact'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='contact' placeholder='(397) 294-5153' invalid={errors.contact && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='company'>\r\n            Company <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='company'\r\n            control={control}\r\n            render={({ field }) => (\r\n              <Input id='company' placeholder='Company Pvt Ltd' invalid={errors.company && true} {...field} />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='country'>\r\n            Country <span className='text-danger'>*</span>\r\n          </Label>\r\n          <Controller\r\n            name='country'\r\n            control={control}\r\n            render={({ field }) => (\r\n              // <Input id='country' placeholder='Australia' invalid={errors.country && true} {...field} />\r\n              <Select\r\n                isClearable={false}\r\n                classNamePrefix='select'\r\n                options={countryOptions}\r\n                theme={selectThemeColors}\r\n                className={classnames('react-select', { 'is-invalid': data !== null && data.country === null })}\r\n                {...field}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className='mb-1'>\r\n          <Label className='form-label' for='user-role'>\r\n            User Role\r\n          </Label>\r\n          <Input type='select' id='user-role' name='user-role' value={role} onChange={e => setRole(e.target.value)}>\r\n            <option value='subscriber'>Subscriber</option>\r\n            <option value='editor'>Editor</option>\r\n            <option value='maintainer'>Maintainer</option>\r\n            <option value='author'>Author</option>\r\n            <option value='admin'>Admin</option>\r\n          </Input>\r\n        </div>\r\n        <div className='mb-1' value={plan} onChange={e => setPlan(e.target.value)}>\r\n          <Label className='form-label' for='select-plan'>\r\n            Select Plan\r\n          </Label>\r\n          <Input type='select' id='select-plan' name='select-plan'>\r\n            <option value='basic'>Basic</option>\r\n            <option value='enterprise'>Enterprise</option>\r\n            <option value='company'>Company</option>\r\n            <option value='team'>Team</option>\r\n          </Input>\r\n        </div>\r\n        <Button type='submit' className='me-1' color='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Sidebar>\r\n  )\r\n}\r\n\r\nexport default SidebarNewUsers\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\n// ** Store & Actions\r\nimport { store } from '@store/store'\r\nimport { getUser, deleteUser } from '../store'\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = row => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className='me-1'\r\n        color={row.avatarColor || 'light-primary'}\r\n        content={row.fullName || 'John Doe'}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = row => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: 'text-primary',\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: 'text-success',\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: 'text-info',\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: 'text-warning',\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: 'text-danger',\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\r\n\r\n  return (\r\n    <span className='text-truncate text-capitalize align-middle'>\r\n      <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} />\r\n      {row.role}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: 'light-warning',\r\n  active: 'light-success',\r\n  inactive: 'light-secondary'\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'User',\r\n    sortable: true,\r\n    minWidth: '300px',\r\n    sortField: 'fullName',\r\n    selector: row => row.fullName,\r\n    cell: row => (\r\n      <div className='d-flex justify-content-left align-items-center'>\r\n        {renderClient(row)}\r\n        <div className='d-flex flex-column'>\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className='user_name text-truncate text-body'\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className='fw-bolder'>{row.fullName}</span>\r\n          </Link>\r\n          <small className='text-truncate text-muted mb-0'>{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: 'Role',\r\n    sortable: true,\r\n    minWidth: '172px',\r\n    sortField: 'role',\r\n    selector: row => row.role,\r\n    cell: row => renderRole(row)\r\n  },\r\n  {\r\n    name: 'Plan',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'currentPlan',\r\n    selector: row => row.currentPlan,\r\n    cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: 'Billing',\r\n    minWidth: '230px',\r\n    sortable: true,\r\n    sortField: 'billing',\r\n    selector: row => row.billing,\r\n    cell: row => <span className='text-capitalize'>{row.billing}</span>\r\n  },\r\n  {\r\n    name: 'Status',\r\n    minWidth: '138px',\r\n    sortable: true,\r\n    sortField: 'status',\r\n    selector: row => row.status,\r\n    cell: row => (\r\n      <Badge className='text-capitalize' color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: 'Actions',\r\n    minWidth: '100px',\r\n    cell: row => (\r\n      <div className='column-action'>\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag='div' className='btn btn-sm'>\r\n            <MoreVertical size={14} className='cursor-pointer' />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem\r\n              tag={Link}\r\n              className='w-100'\r\n              to={`/apps/user/view/${row.id}`}\r\n              onClick={() => store.dispatch(getUser(row.id))}\r\n            >\r\n              <FileText size={14} className='me-50' />\r\n              <span className='align-middle'>Details</span>\r\n            </DropdownItem>\r\n            <DropdownItem tag='a' href='/' className='w-100' onClick={e => e.preventDefault()}>\r\n              <Archive size={14} className='me-50' />\r\n              <span className='align-middle'>Edit</span>\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              tag='a'\r\n              href='/'\r\n              className='w-100'\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                store.dispatch(deleteUser(row.id))\r\n              }}\r\n            >\r\n              <Trash2 size={14} className='me-50' />\r\n              <span className='align-middle'>Delete</span>\r\n            </DropdownItem>\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      </div>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\n// ** Invoice List Sidebar\r\nimport Sidebar from './Sidebar'\r\n\r\n// ** Table Columns\r\nimport { columns } from './columns'\r\n\r\n// ** Store & Actions\r\nimport { getAllData, getData } from '../store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// ** Third Party Components\r\nimport Select from 'react-select'\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy } from 'react-feather'\r\n\r\n// ** Utils\r\nimport { selectThemeColors } from '@utils'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({ store, toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\r\n  // ** Converts table to CSV\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result\r\n\r\n    const columnDelimiter = ','\r\n    const lineDelimiter = '\\n'\r\n    const keys = Object.keys(store.data[0])\r\n\r\n    result = ''\r\n    result += keys.join(columnDelimiter)\r\n    result += lineDelimiter\r\n\r\n    array.forEach(item => {\r\n      let ctr = 0\r\n      keys.forEach(key => {\r\n        if (ctr > 0) result += columnDelimiter\r\n\r\n        result += item[key]\r\n\r\n        ctr++\r\n      })\r\n      result += lineDelimiter\r\n    })\r\n\r\n    return result\r\n  }\r\n\r\n  // ** Downloads CSV\r\n  function downloadCSV(array) {\r\n    const link = document.createElement('a')\r\n    let csv = convertArrayOfObjectsToCSV(array)\r\n    if (csv === null) return\r\n\r\n    const filename = 'export.csv'\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv))\r\n    link.setAttribute('download', filename)\r\n    link.click()\r\n  }\r\n  return (\r\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\r\n      <Row>\r\n        <Col xl='6' className='d-flex align-items-center p-0'>\r\n          <div className='d-flex align-items-center w-100'>\r\n            <label htmlFor='rows-per-page'>Show</label>\r\n            <Input\r\n              className='mx-50'\r\n              type='select'\r\n              id='rows-per-page'\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: '5rem' }}\r\n            >\r\n              <option value='10'>10</option>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n            </Input>\r\n            <label htmlFor='rows-per-page'>Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl='6'\r\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\r\n        >\r\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\r\n            <label className='mb-0' htmlFor='search-invoice'>\r\n              Search:\r\n            </label>\r\n            <Input\r\n              id='search-invoice'\r\n              className='ms-50 w-100'\r\n              type='text'\r\n              value={searchTerm}\r\n              onChange={e => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className='d-flex align-items-center table-header-actions'>\r\n            <UncontrolledDropdown className='me-1'>\r\n              <DropdownToggle color='secondary' caret outline>\r\n                <Share className='font-small-4 me-50' />\r\n                <span className='align-middle'>Export</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>\r\n                  <Printer className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Print</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\r\n                  <FileText className='font-small-4 me-50' />\r\n                  <span className='align-middle'>CSV</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Grid className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Excel</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <File className='font-small-4 me-50' />\r\n                  <span className='align-middle'>PDF</span>\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100'>\r\n                  <Copy className='font-small-4 me-50' />\r\n                  <span className='align-middle'>Copy</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            <Button className='add-new-user' color='primary' onClick={toggleSidebar}>\r\n              Add New User\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst UsersList = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector(state => state.users)\r\n\r\n  // ** States\r\n  const [sort, setSort] = useState('desc')\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sortColumn, setSortColumn] = useState('id')\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [currentRole, setCurrentRole] = useState({ value: '', label: 'Select Role' })\r\n  const [currentPlan, setCurrentPlan] = useState({ value: '', label: 'Select Plan' })\r\n  const [currentStatus, setCurrentStatus] = useState({ value: '', label: 'Select Status', number: 0 })\r\n\r\n  // ** Function to toggle sidebar\r\n  const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length, sort, sortColumn, currentPage])\r\n\r\n  // ** User filter options\r\n  const roleOptions = [\r\n    { value: '', label: 'Select Role' },\r\n    { value: 'admin', label: 'Admin' },\r\n    { value: 'author', label: 'Author' },\r\n    { value: 'editor', label: 'Editor' },\r\n    { value: 'maintainer', label: 'Maintainer' },\r\n    { value: 'subscriber', label: 'Subscriber' }\r\n  ]\r\n\r\n  const planOptions = [\r\n    { value: '', label: 'Select Plan' },\r\n    { value: 'basic', label: 'Basic' },\r\n    { value: 'company', label: 'Company' },\r\n    { value: 'enterprise', label: 'Enterprise' },\r\n    { value: 'team', label: 'Team' }\r\n  ]\r\n\r\n  const statusOptions = [\r\n    { value: '', label: 'Select Status', number: 0 },\r\n    { value: 'pending', label: 'Pending', number: 1 },\r\n    { value: 'active', label: 'Active', number: 2 },\r\n    { value: 'inactive', label: 'Inactive', number: 3 }\r\n  ]\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = page => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = e => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        perPage: value,\r\n        page: currentPage,\r\n        role: currentRole.value,\r\n        currentPlan: currentPlan.value,\r\n        status: currentStatus.value\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = val => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        q: val,\r\n        sortColumn,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={''}\r\n        nextLabel={''}\r\n        pageCount={count || 1}\r\n        activeClassName='active'\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={page => handlePagination(page)}\r\n        pageClassName={'page-item'}\r\n        nextLinkClassName={'page-link'}\r\n        nextClassName={'page-item next'}\r\n        previousClassName={'page-item prev'}\r\n        previousLinkClassName={'page-link'}\r\n        pageLinkClassName={'page-link'}\r\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      role: currentRole.value,\r\n      currentPlan: currentPlan.value,\r\n      status: currentStatus.value,\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        sortColumn,\r\n        q: searchTerm,\r\n        page: currentPage,\r\n        perPage: rowsPerPage,\r\n        role: currentRole.value,\r\n        status: currentStatus.value,\r\n        currentPlan: currentPlan.value\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle tag='h4'>Filters</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md='4'>\r\n              <Label for='role-select'>Role</Label>\r\n              <Select\r\n                isClearable={false}\r\n                value={currentRole}\r\n                options={roleOptions}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                theme={selectThemeColors}\r\n                onChange={data => {\r\n                  setCurrentRole(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      role: data.value,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      status: currentStatus.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col className='my-md-0 my-1' md='4'>\r\n              <Label for='plan-select'>Plan</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={planOptions}\r\n                value={currentPlan}\r\n                onChange={data => {\r\n                  setCurrentPlan(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: data.value,\r\n                      status: currentStatus.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md='4'>\r\n              <Label for='status-select'>Status</Label>\r\n              <Select\r\n                theme={selectThemeColors}\r\n                isClearable={false}\r\n                className='react-select'\r\n                classNamePrefix='select'\r\n                options={statusOptions}\r\n                value={currentStatus}\r\n                onChange={data => {\r\n                  setCurrentStatus(data)\r\n                  dispatch(\r\n                    getData({\r\n                      sort,\r\n                      sortColumn,\r\n                      q: searchTerm,\r\n                      page: currentPage,\r\n                      status: data.value,\r\n                      perPage: rowsPerPage,\r\n                      role: currentRole.value,\r\n                      currentPlan: currentPlan.value\r\n                    })\r\n                  )\r\n                }}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card className='overflow-hidden'>\r\n        <div className='react-dataTable'>\r\n          <DataTable\r\n            noHeader\r\n            subHeader\r\n            sortServer\r\n            pagination\r\n            responsive\r\n            paginationServer\r\n            columns={columns}\r\n            onSort={handleSort}\r\n            sortIcon={<ChevronDown />}\r\n            className='react-dataTable'\r\n            paginationComponent={CustomPagination}\r\n            data={dataToRender()}\r\n            subHeaderComponent={\r\n              <CustomHeader\r\n                store={store}\r\n                searchTerm={searchTerm}\r\n                rowsPerPage={rowsPerPage}\r\n                handleFilter={handleFilter}\r\n                handlePerPage={handlePerPage}\r\n                toggleSidebar={toggleSidebar}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      </Card>\r\n\r\n      <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** User List Component\r\nimport Table from './Table'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\r\n\r\n// ** Icons Imports\r\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\r\n\r\n// ** Styles\r\nimport '@styles/react/apps/app-users.scss'\r\n\r\nconst UsersList = () => {\r\n  return (\r\n    <div className='app-user-list'>\r\n      <Row>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='primary'\r\n            statTitle='Total Users'\r\n            icon={<User size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='danger'\r\n            statTitle='Paid Users'\r\n            icon={<UserPlus size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='success'\r\n            statTitle='Active Users'\r\n            icon={<UserCheck size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\r\n          />\r\n        </Col>\r\n        <Col lg='3' sm='6'>\r\n          <StatsHorizontal\r\n            color='warning'\r\n            statTitle='Pending Users'\r\n            icon={<UserX size={20} />}\r\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Table />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UsersList\r\n","// ** Third Party Components\r\nimport { X } from 'react-feather'\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const {\r\n    open,\r\n    size,\r\n    title,\r\n    width,\r\n    children,\r\n    closeBtn,\r\n    className,\r\n    toggleSidebar,\r\n    bodyClassName,\r\n    contentClassName,\r\n    wrapperClassName,\r\n    headerClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** If user passes custom close btn render that else default close btn\r\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={toggleSidebar}\r\n      contentClassName={classnames('overflow-hidden', {\r\n        [contentClassName]: contentClassName\r\n      })}\r\n      modalClassName={classnames('modal-slide-in', {\r\n        [wrapperClassName]: wrapperClassName\r\n      })}\r\n      className={classnames({\r\n        [className]: className,\r\n        'sidebar-lg': size === 'lg',\r\n        'sidebar-sm': size === 'sm'\r\n      })}\r\n      /*eslint-disable */\r\n      {...(width !== undefined\r\n        ? {\r\n            style: { width: String(width) + 'px' }\r\n          }\r\n        : {})}\r\n      /*eslint-enable */\r\n      {...rest}\r\n    >\r\n      <ModalHeader\r\n        className={classnames({\r\n          [headerClassName]: headerClassName\r\n        })}\r\n        toggle={toggleSidebar}\r\n        close={renderCloseBtn}\r\n        tag='div'\r\n      >\r\n        <h5 className='modal-title'>\r\n          <span className='align-middle'>{title}</span>\r\n        </h5>\r\n      </ModalHeader>\r\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\r\n        <ModalBody\r\n          className={classnames('flex-grow-1', {\r\n            [bodyClassName]: bodyClassName\r\n          })}\r\n        >\r\n          {children}\r\n        </ModalBody>\r\n      </PerfectScrollbar>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// ** PropTypes\r\nSidebar.propTypes = {\r\n  className: Proptypes.string,\r\n  bodyClassName: Proptypes.string,\r\n  open: Proptypes.bool.isRequired,\r\n  title: Proptypes.string.isRequired,\r\n  contentClassName: Proptypes.string,\r\n  wrapperClassName: Proptypes.string,\r\n  children: Proptypes.any.isRequired,\r\n  size: Proptypes.oneOf(['sm', 'lg']),\r\n  toggleSidebar: Proptypes.func.isRequired,\r\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\r\n}\r\n","// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n"],"sourceRoot":""}