{"version":3,"sources":["views/components/autocomplete/AutoCompleteAjax.js","views/components/autocomplete/AutoCompleteBasic.js","views/components/autocomplete/AutoCompleteRender.js","views/components/autocomplete/AutoCompleteSections.js","views/components/autocomplete/AutoCompleteLimit.js","views/components/autocomplete/AutoCompleteSuggestions.js","views/components/autocomplete/AutoCompleteSourceCode.js","views/components/autocomplete/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["AutoCompleteAjax","useState","suggestions","setSuggestions","useEffect","axios","get","then","response","data","autoComplete","length","className","filterKey","suggestionLimit","placeholder","AutoCompleteBasic","title","AutoCompleteRender","name","img","img1","img2","img3","img4","img6","img5","customRender","suggestion","i","filteredData","activeSuggestion","onSuggestionItemClick","onSuggestionItemHover","onMouseEnter","indexOf","classnames","active","onClick","e","src","alt","height","width","AutoCompleteSections","groupTitle","grouped","filterHeaderKey","AutoCompleteSearchLimit","AutoCompleteDefaultSuggestions","defaultSuggestions","basicExample","sectionExample","ajaxExample","customRenderExample","defaultSuggestionsExample","searchLimitExample","AutoComplete","Prism","highlightAll","xl","lg","code","AutoCompleteSuggestions","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","color","size","end","CardSnippet","children","noBody","iconCode","isOpen","setIsOpen","IconCode","CardBody"],"mappings":"8PA2BeA,EAlBU,WAEvB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAMA,OAJAC,qBAAU,WACRC,IAAMC,IAAI,0BAA0BC,MAAK,SAAAC,GAAQ,OAAIL,EAAeK,EAASC,KAAKC,mBACjF,IAEIR,EAAYS,OACjB,cAAC,IAAD,CACET,YAAaA,EACbU,UAAU,eACVC,UAAU,QACVC,gBAAiB,EACjBC,YAAY,8CAEZ,MCuBSC,EA1CW,WAExB,MAAsBf,mBAAS,CAC7B,CACEgB,MAAO,YAET,CACEA,MAAO,cAET,CACEA,MAAO,cAET,CACEA,MAAO,UAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,aA1BJf,EAAP,oBA8BA,OACE,cAAC,IAAD,CACEW,UAAU,QACVC,gBAAiB,EACjBC,YAAY,WACZb,YAAaA,EACbU,UAAU,kB,gECwBDM,EArDY,WAEzB,MAAsBjB,mBAAS,CAC7B,CACEkB,KAAM,eACNC,IAAKC,WAEP,CACEF,KAAM,gBACNC,IAAKE,WAEP,CACEH,KAAM,iBACNC,IAAKG,WAEP,CACEJ,KAAM,mBACNC,IAAKI,WAEP,CACEL,KAAM,gBACNC,IAAKK,WAEP,CACEN,KAAM,cACNC,IAAKM,aAvBFxB,EAAP,oBA2BA,OACE,cAAC,IAAD,CACEW,UAAU,OACVE,YAAY,WACZH,UAAU,eACVV,YAAaA,EACbyB,aAAc,SAACC,EAAYC,EAAGC,EAAcC,EAAkBC,EAAuBC,GAAvE,OACZ,qBAEEC,aAAc,kBAAMD,EAAsBH,EAAaK,QAAQP,KAC/DhB,UAAWwB,IAAW,kBAAmB,CACvCC,OAAQP,EAAaK,QAAQP,KAAgBG,IAE/CO,QAAS,SAAAC,GACPP,EAAsB,KAAMO,IAPhC,UAUE,qBAAKC,IAAKZ,EAAWR,IAAKqB,IAAKb,EAAWT,KAAMuB,OAAO,KAAKC,MAAM,KAAK/B,UAAU,SACjF,+BAAOgB,EAAWT,SAVbU,OCqCAe,EAnFc,WAE3B,MAAsB3C,mBAAS,CAC7B,CACE4C,WAAY,QACZpC,KAAM,CACJ,CACEQ,MAAO,OAIb,CACE4B,WAAY,QACZpC,KAAM,CACJ,CACEQ,MAAO,OAET,CACEA,MAAO,UAIb,CACE4B,WAAY,QACZpC,KAAM,CACJ,CACEQ,MAAO,WAET,CACEA,MAAO,UAET,CACEA,MAAO,QAET,CACEA,MAAO,cAET,CACEA,MAAO,OAET,CACEA,MAAO,UAIb,CACE4B,WAAY,QACZpC,KAAM,CACJ,CACEQ,MAAO,MAET,CACEA,MAAO,SAET,CACEA,MAAO,WAET,CACEA,MAAO,QAIb,CACE4B,WAAY,QACZpC,KAAM,CACJ,CACEQ,MAAO,WAhERf,EAAP,oBAsEA,OACE,cAAC,IAAD,CACE4C,SAAS,EACTjC,UAAU,QACVE,YAAY,WACZH,UAAU,eACVV,YAAaA,EACb6C,gBAAgB,gBCrCPC,EA1CiB,WAE9B,MAAsB/C,mBAAS,CAC7B,CACEgB,MAAO,YAET,CACEA,MAAO,cAET,CACEA,MAAO,cAET,CACEA,MAAO,UAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,aA1BJf,EAAP,oBA8BA,OACE,cAAC,IAAD,CACEA,YAAaA,EACbU,UAAU,eACVC,UAAU,QACVC,gBAAiB,EACjBC,YAAY,cCKHkC,EA3CwB,WAErC,MAAsBhD,mBAAS,CAC7B,CACEgB,MAAO,YAET,CACEA,MAAO,cAET,CACEA,MAAO,cAET,CACEA,MAAO,UAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,aA1BJf,EAAP,oBA8BA,OACE,cAAC,IAAD,CACEW,UAAU,QACVC,gBAAiB,EACjBC,YAAY,WACZH,UAAU,eACVV,YAAaA,EACbgD,oBAAoB,KC7CbC,EACX,8BACE,sBAAMvC,UAAU,eAAhB,6vBAoDSwC,EACX,8BACE,sBAAMxC,UAAU,eAAhB,07CA6FSyC,EACX,8BACE,sBAAMzC,UAAU,eAAhB,6oBA+BS0C,EACX,8BACE,sBAAM1C,UAAU,eAAhB,i/DAqFS2C,EACX,8BACE,sBAAM3C,UAAU,eAAhB,wzBAqDS4C,EACX,8BACE,sBAAM5C,UAAU,eAAhB,ywBC7PW6C,UA1CM,WAInB,OAHArD,qBAAU,WACRsD,IAAMC,iBACL,IAED,eAAC,WAAD,WACE,cAAC,IAAD,CAAa1C,MAAM,gBAAgBR,KAAM,CAAC,CAAEQ,MAAO,cAAgB,CAAEA,MAAO,oBAC5E,eAAC,KAAD,WACE,cAAC,IAAD,CAAK2C,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,QAAQ6C,KAAMX,EAA1B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKS,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,WAAW6C,KAAMV,EAA7B,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKQ,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,OAAO6C,KAAMT,EAAzB,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKO,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,gBAAgB6C,KAAMR,EAAlC,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAKM,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,sBAAsB6C,KAAMP,EAAxC,SACE,cAACQ,EAAD,QAGJ,cAAC,IAAD,CAAKH,GAAG,IAAIC,GAAG,KAAf,SACE,cAAC,IAAD,CAAM5C,MAAM,eAAe6C,KAAMN,EAAjC,SACE,cAAC,EAAD,gB,2ICqBGQ,IApEK,SAAAC,GAElB,IAAQxD,EAAgBwD,EAAhBxD,KAAMQ,EAAUgD,EAAVhD,MAmBd,OACE,sBAAKL,UAAU,qBAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,SAAf,UACGK,EAAQ,oBAAIL,UAAU,wCAAd,SAAuDK,IAAc,GAC9E,qBAAKL,UAAU,6DAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBsD,IAAI,KAApB,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAzBP1D,EAAK2D,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKG,KAAOC,IAAOC,WAC7BC,EAAalE,EAAKE,OAAS,IAAM2D,EACvC,OACE,cAAC,IAAD,CACEJ,IAAI,KAEJ7B,QAASsC,EACT/D,UAAWwB,IAAW,CAAE,gBAAiBuC,IAJ3C,SAME,cAACJ,EAAD,2BAAcF,EAAKG,KAAO,CAAEL,GAAIE,EAAKG,MAAS,IAA9C,aAAoDH,EAAKpD,UAJpDqD,kBA2BT,qBAAK1D,UAAU,qEAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAgBgE,MAAM,UAAUhE,UAAU,qCAA1C,SACE,cAAC,IAAD,CAAMiE,KAAM,OAEd,eAAC,IAAD,CAAcX,IAAI,KAAKY,KAAG,EAA1B,UACE,eAAC,IAAD,CAAcZ,IAAKO,IAAMN,GAAG,aAA5B,UACE,cAAC,IAAD,CAAavD,UAAU,OAAOiE,KAAM,KACpC,sBAAMjE,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcsD,IAAKO,IAAMN,GAAG,aAA5B,UACE,cAAC,IAAD,CAAevD,UAAU,OAAOiE,KAAM,KACtC,sBAAMjE,UAAU,eAAhB,qBAEF,eAAC,IAAD,CAAcsD,IAAKO,IAAMN,GAAG,cAA5B,UACE,cAAC,IAAD,CAAMvD,UAAU,OAAOiE,KAAM,KAC7B,sBAAMjE,UAAU,eAAhB,sBAEF,eAAC,IAAD,CAAcsD,IAAKO,IAAMN,GAAG,iBAA5B,UACE,cAAC,IAAD,CAAUvD,UAAU,OAAOiE,KAAM,KACjC,sBAAMjE,UAAU,eAAhB,wC,6ECpCDmE,IAhCK,SAAAd,GAElB,IAAQhD,EAA4CgD,EAA5ChD,MAAO+D,EAAqCf,EAArCe,SAAUC,EAA2BhB,EAA3BgB,OAAQnB,EAAmBG,EAAnBH,KAAMoB,EAAajB,EAAbiB,SAGvC,EAA4BjF,oBAAS,GAArC,mBAAOkF,EAAP,KAAeC,EAAf,KAGMC,EAAWH,GAAsB,cAAC,IAAD,CAAML,KAAM,KAM7CN,EAAUU,EAASP,WAAWY,IAEpC,OACE,eAAC,IAAD,CAAM1E,UAAU,eAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWsD,IAAI,KAAf,SAAqBjD,IACrB,qBAAKL,UAAU,uBAAuB0B,QAT7B,kBAAM8C,GAAWD,IAS1B,SACGE,OAGL,cAACd,EAAD,UAAUS,IACV,cAAC,IAAD,CAAUG,OAAQA,EAAlB,SACE,cAAC,IAAD,UAAWrB","file":"static/js/116.a010f72d.chunk.js","sourcesContent":["// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteAjax = () => {\n  // ** State\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(() => {\n    axios.get('/api/autocomplete/data').then(response => setSuggestions(response.data.autoComplete))\n  }, [])\n\n  return suggestions.length ? (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder='Search for any of the top 250 IMDB movies'\n    />\n  ) : null\n}\nexport default AutoCompleteAjax\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteBasic = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n      suggestions={suggestions}\n      className='form-control'\n    />\n  )\n}\nexport default AutoCompleteBasic\n","// ** React Imports\nimport { useState } from 'react'\nimport classnames from 'classnames'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\n// ** Images\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\n\nconst AutoCompleteRender = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      name: 'Jake Shelton',\n      img: img1\n    },\n    {\n      name: 'Edith Baldwin',\n      img: img2\n    },\n    {\n      name: 'Jennifer Wolfe',\n      img: img3\n    },\n    {\n      name: 'Emily Washington',\n      img: img4\n    },\n    {\n      name: 'Heather Green',\n      img: img6\n    },\n    {\n      name: 'Brian Moore',\n      img: img5\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='name'\n      placeholder=\"Type 'a'\"\n      className='form-control'\n      suggestions={suggestions}\n      customRender={(suggestion, i, filteredData, activeSuggestion, onSuggestionItemClick, onSuggestionItemHover) => (\n        <li\n          key={i}\n          onMouseEnter={() => onSuggestionItemHover(filteredData.indexOf(suggestion))}\n          className={classnames('suggestion-item', {\n            active: filteredData.indexOf(suggestion) === activeSuggestion\n          })}\n          onClick={e => {\n            onSuggestionItemClick(null, e)\n          }}\n        >\n          <img src={suggestion.img} alt={suggestion.name} height='32' width='32' className='me-1' />\n          <span>{suggestion.name}</span>\n        </li>\n      )}\n    />\n  )\n}\nexport default AutoCompleteRender\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSections = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      groupTitle: '1970s',\n      data: [\n        {\n          title: 'C'\n        }\n      ]\n    },\n    {\n      groupTitle: '1980s',\n      data: [\n        {\n          title: 'C++'\n        },\n        {\n          title: 'Perl'\n        }\n      ]\n    },\n    {\n      groupTitle: '1990s',\n      data: [\n        {\n          title: 'Haskell'\n        },\n        {\n          title: 'Python'\n        },\n        {\n          title: 'Java'\n        },\n        {\n          title: 'Javascript'\n        },\n        {\n          title: 'PHP'\n        },\n        {\n          title: 'Ruby'\n        }\n      ]\n    },\n    {\n      groupTitle: '2000s',\n      data: [\n        {\n          title: 'C#'\n        },\n        {\n          title: 'Scala'\n        },\n        {\n          title: 'Clojure'\n        },\n        {\n          title: 'Go'\n        }\n      ]\n    },\n    {\n      groupTitle: '2010s',\n      data: [\n        {\n          title: 'Elm'\n        }\n      ]\n    }\n  ])\n\n  return (\n    <AutoComplete\n      grouped={true}\n      filterKey='title'\n      placeholder=\"Type 'c'\"\n      className='form-control'\n      suggestions={suggestions}\n      filterHeaderKey='groupTitle'\n    />\n  )\n}\nexport default AutoCompleteSections\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSearchLimit = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={2}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteSearchLimit\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteDefaultSuggestions = () => {\n  // ** State\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n      className='form-control'\n      suggestions={suggestions}\n      defaultSuggestions={true}\n    />\n  )\n}\nexport default AutoCompleteDefaultSuggestions\n","export const basicExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteBasic = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteBasic\n`}\n    </code>\n  </pre>\n)\n\nexport const sectionExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSections = () => {\n  const [suggestions] = useState([\n    {\n      groupTitle: '1970s',\n      data: [\n        {\n          title: 'C'\n        }\n      ]\n    },\n    {\n      groupTitle: '1980s',\n      data: [\n        {\n          title: 'C++'\n        },\n        {\n          title: 'Perl'\n        }\n      ]\n    },\n    {\n      groupTitle: '1990s',\n      data: [\n        {\n          title: 'Haskell'\n        },\n        {\n          title: 'Python'\n        },\n        {\n          title: 'Java'\n        },\n        {\n          title: 'Javascript'\n        },\n        {\n          title: 'PHP'\n        },\n        {\n          title: 'Ruby'\n        }\n      ]\n    },\n    {\n      groupTitle: '2000s',\n      data: [\n        {\n          title: 'C#'\n        },\n        {\n          title: 'Scala'\n        },\n        {\n          title: 'Clojure'\n        },\n        {\n          title: 'Go'\n        }\n      ]\n    },\n    {\n      groupTitle: '2010s',\n      data: [\n        {\n          title: 'Elm'\n        }\n      ]\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      filterHeaderKey='groupTitle'\n      grouped={true}\n      placeholder=\"Type 'c'\"\n    />\n  )\n}\nexport default AutoCompleteSections\n`}\n    </code>\n  </pre>\n)\n\nexport const ajaxExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteAjax = () => {\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(() => {\n    axios\n      .get('/api/autocomplete/data')\n      .then(response => setSuggestions(response.data.autoComplete))\n  }, [])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      placeholder='Search for any of the top 250 IMDB movies'\n    />\n  )\n}\nexport default AutoCompleteAjax\n`}\n    </code>\n  </pre>\n)\n\nexport const customRenderExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport classnames from 'classnames'\nimport AutoComplete from '@components/autocomplete'\nimport img1 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\nimport img2 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\nimport img3 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\nimport img4 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\nimport img5 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\nimport img6 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\n\nconst AutoCompleteRender = () => {\n  const [suggestions] = useState([\n    {\n      name: 'Jake Shelton',\n      img: img1\n    },\n    {\n      name: 'Edith Baldwin',\n      img: img2\n    },\n    {\n      name: 'Jennifer Wolfe',\n      img: img3\n    },\n    {\n      name: 'Emily Washington',\n      img: img4\n    },\n    {\n      name: 'Heather Green',\n      img: img6\n    },\n    {\n      name: 'Brian Moore',\n      img: img5\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='name'\n      placeholder=\"Type 'a'\"\n      customRender={(\n        suggestion,\n        i,\n        filteredData,\n        activeSuggestion,\n        onSuggestionItemClick,\n        onSuggestionItemHover\n      ) => (\n        <li\n          className={classnames('suggestion-item', {\n            active: filteredData.indexOf(suggestion) === activeSuggestion\n          })}\n          key={i}\n          onMouseEnter={() =>\n            onSuggestionItemHover(filteredData.indexOf(suggestion))\n          }\n          onClick={e => {\n            onSuggestionItemClick(null, e)\n          }}\n        >\n          <img\n            src={suggestion.img}\n            alt={suggestion.name}\n            height='32'\n            width='32'\n            className='me-1'\n          />\n          <span>{suggestion.name}</span>\n        </li>\n      )}\n    />\n  )\n}\nexport default AutoCompleteRender\n`}\n    </code>\n  </pre>\n)\n\nexport const defaultSuggestionsExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteDefaultSuggestions = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={4}\n      defaultSuggestions={true}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteDefaultSuggestions\n`}\n    </code>\n  </pre>\n)\n\nexport const searchLimitExample = (\n  <pre>\n    <code className='language-jsx'>\n      {`\nimport React, { useState } from 'react'\nimport AutoComplete from '@components/autocomplete'\n\nconst AutoCompleteSearchLimit = () => {\n  const [suggestions] = useState([\n    {\n      title: 'React.js'\n    },\n    {\n      title: 'Angular.js'\n    },\n    {\n      title: 'Javascript'\n    },\n    {\n      title: 'Vue.js'\n    },\n    {\n      title: 'HTML'\n    },\n    {\n      title: 'CSS'\n    },\n    {\n      title: 'SCSS'\n    },\n    {\n      title: 'PHP'\n    },\n    {\n      title: 'Laravel'\n    }\n  ])\n\n  return (\n    <AutoComplete\n      suggestions={suggestions}\n      className='form-control'\n      filterKey='title'\n      suggestionLimit={2}\n      placeholder=\"Type 'a'\"\n    />\n  )\n}\nexport default AutoCompleteSearchLimit\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AutoCompleteAjax from './AutoCompleteAjax'\nimport AutoCompleteBasic from './AutoCompleteBasic'\nimport AutoCompleteRender from './AutoCompleteRender'\nimport AutoCompleteSections from './AutoCompleteSections'\nimport AutoCompleteSearchLimit from './AutoCompleteLimit'\nimport AutoCompleteSuggestions from './AutoCompleteSuggestions'\n\n// ** Source Code\nimport {\n  ajaxExample,\n  basicExample,\n  sectionExample,\n  searchLimitExample,\n  customRenderExample,\n  defaultSuggestionsExample\n} from './AutoCompleteSourceCode'\n\nconst AutoComplete = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n  return (\n    <Fragment>\n      <BreadCrumbs title='Auto Complete' data={[{ title: 'Components' }, { title: 'Auto Complete' }]} />\n      <Row>\n        <Col xl='6' lg='12'>\n          <Card title='Basic' code={basicExample}>\n            <AutoCompleteBasic />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Sections' code={sectionExample}>\n            <AutoCompleteSections />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Ajax' code={ajaxExample}>\n            <AutoCompleteAjax />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Custom Render' code={customRenderExample}>\n            <AutoCompleteRender />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Default Suggestions' code={defaultSuggestionsExample}>\n            <AutoCompleteSuggestions />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Search Limit' code={searchLimitExample}>\n            <AutoCompleteSearchLimit />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default AutoComplete\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n"],"sourceRoot":""}