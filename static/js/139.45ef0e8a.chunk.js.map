{"version":3,"sources":["views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["DateMask","for","className","placeholder","options","date","delimiter","datePattern","id","TimeMask","time","timePattern","PhoneMask","phone","phoneRegionCode","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","title","data","sm","tag","xl","md","BreadCrumbs","props","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","color","size","end"],"mappings":"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","file":"static/js/139.45ef0e8a.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst DateMask = () => {\r\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\r\n  return (\r\n    <Fragment>\r\n      <Label for='date'>Date</Label>\r\n      <Cleave className='form-control' placeholder='2001-01-01' options={options} id='date' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DateMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst TimeMask = () => {\r\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\r\n  return (\r\n    <Fragment>\r\n      <Label for='time'>Time</Label>\r\n      <Cleave className='form-control' placeholder='12:00:00' options={options} id='time' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default TimeMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\n\r\n// ** Reactstrap Components\r\nimport { InputGroup, InputGroupText, Label } from 'reactstrap'\r\n\r\nconst PhoneMask = () => {\r\n  const options = { phone: true, phoneRegionCode: 'US' }\r\n  return (\r\n    <Fragment>\r\n      <Label for='phone-number'>Phone Number</Label>\r\n      <InputGroup className='input-group-merge'>\r\n        <InputGroupText>US (+1)</InputGroupText>\r\n        <Cleave className='form-control' placeholder='1 234 567 8900' options={options} id='phone-number' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PhoneMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst BlocksMask = () => {\r\n  const options = { blocks: [4, 3, 3], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='blocks'>Blocks</Label>\r\n      <Cleave className='form-control' placeholder='Blocks [4, 3, 3]' options={options} id='blocks' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default BlocksMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst PrefixMask = () => {\r\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='prefix'>Prefix</Label>\r\n      <Cleave className='form-control' options={options} id='prefix' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default PrefixMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst DelimitersMask = () => {\r\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='delimiters'>Delimiters</Label>\r\n      <Cleave className='form-control' placeholder=\"Delimiter: '.'\" options={options} id='delimiters' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DelimitersMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst CreditCardMask = () => {\r\n  const options = { creditCard: true }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Label for='credit-card'>Credit Card</Label>\r\n      <Cleave className='form-control' placeholder='0000 0000 0000 0000' options={options} id='credit-card' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CreditCardMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst CustomDelimitersMask = () => {\r\n  const options = { delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }\r\n  return (\r\n    <Fragment>\r\n      <Label for='custom-delimiters'>Custom Delimiters</Label>\r\n      <Cleave\r\n        className='form-control'\r\n        placeholder=\"Delimiter: ['.', '.', '-']\"\r\n        options={options}\r\n        id='custom-delimiters'\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default CustomDelimitersMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Cleave from 'cleave.js/react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Label } from 'reactstrap'\r\n\r\nconst NumeralFormattingMask = () => {\r\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Label for='numeral-formatting'>Numeral Formatting</Label>\r\n      <Cleave className='form-control' placeholder='10,000' options={options} id='numeral-formatting' />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default NumeralFormattingMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\n\r\n// ** Demo Components\r\nimport DateMask from './DateMask'\r\nimport TimeMask from './TimeMask'\r\nimport PhoneMask from './PhoneMask'\r\nimport BlocksMask from './BlocksMask'\r\nimport PrefixMask from './PrefixMask'\r\nimport DelimitersMask from './DelimitersMask'\r\nimport CreditCardMask from './CreditCardMask'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport CustomDelimitersMask from './CustomDelimitersMask'\r\nimport NumeralFormattingMask from './NumeralFormattingMask'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\r\n\r\nconst InputMask = () => {\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs title='Input Mask' data={[{ title: 'Form Elements' }, { title: 'Input Mask' }]} />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>Input Masks</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <Row>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <CreditCardMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <PhoneMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <DateMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <TimeMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <NumeralFormattingMask />\r\n                </Col>\r\n                <Col className='mb-2' xl='4' md='6' sm='12'>\r\n                  <BlocksMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <DelimitersMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <CustomDelimitersMask />\r\n                </Col>\r\n                <Col xl='4' md='6' sm='12'>\r\n                  <PrefixMask />\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default InputMask\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}