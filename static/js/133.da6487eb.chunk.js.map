{"version":3,"sources":["assets/images/svg/transparent.svg","views/components/toasts/ToastTranslucent.js","views/components/toasts/ToastHeaderIcons.js","views/components/toasts/ToastSourceCode.js","views/components/toasts/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["close","type","className","ToastTranslucent","md","sm","style","background","transparentBg","logo","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","opacity","points","ToastHeaderIcons","icon","size","color","toastTranslucent","toastHeaderIcons","Toasts","useEffect","Prism","highlightAll","title","data","code","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/133.da6487eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/transparent.60cb3acd.svg\";","// ** Reactstrap Imports\r\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\r\n\r\n// ** Images\r\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\r\n\r\nconst close = <button type='button' className='ms-1 btn-close'></button>\r\n\r\nconst ToastTranslucent = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-primary my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a primary background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-secondary my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a secondary background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-success my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a success background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-danger my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a danger background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-warning my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a warning background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-info my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on an info background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-dark my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on an dark background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <div\r\n          className='p-3 my-2 rounded'\r\n          style={{\r\n            background: `url(${transparentBg})`\r\n          }}\r\n        >\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>This is a toast on a transparent background — check it out!</ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ToastTranslucent\r\n","// ** Reactstrap Imports\r\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\r\n\r\nconst logo = (\r\n  <svg viewBox='0 0 139 95' version='1.1' height='14'>\r\n    <defs>\r\n      <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n        <stop stopColor='#000000' offset='0%'></stop>\r\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n      </linearGradient>\r\n      <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n        <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n        <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n      </linearGradient>\r\n    </defs>\r\n    <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n      <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n        <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n          <path\r\n            d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n            id='Path'\r\n            className='text-primary'\r\n            style={{ fill: 'currentColor' }}\r\n          ></path>\r\n          <path\r\n            d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n            id='Path'\r\n            fill='url(#linearGradient-1)'\r\n            opacity='0.2'\r\n          ></path>\r\n          <polygon\r\n            id='Path-2'\r\n            fill='#000000'\r\n            opacity='0.049999997'\r\n            points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n          ></polygon>\r\n          <polygon\r\n            id='Path-2'\r\n            fill='#000000'\r\n            opacity='0.099999994'\r\n            points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n          ></polygon>\r\n          <polygon\r\n            id='Path-3'\r\n            fill='url(#linearGradient-2)'\r\n            opacity='0.099999994'\r\n            points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n          ></polygon>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nconst close = <button type='button' className='ms-1 btn-close'></button>\r\n\r\nconst ToastHeaderIcons = () => {\r\n  return (\r\n    <Row className='demo-vertical-spacing'>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='primary'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a primary icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='success'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a success icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='info'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a info icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='danger'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a danger icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='warning'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a warning icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='dark'>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a dark icon — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon={logo}>\r\n            Vuexy\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ToastHeaderIcons\r\n","export const toastTranslucent = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Toast, ToastBody, ToastHeader, Row, Col } from 'reactstrap'\r\nimport transparentBg from '@src/assets/images/svg/transparent.svg'\r\n\r\nconst close = (\r\n  <button type='button' className='ms-1 btn-close'>\r\n    <span>×</span>\r\n  </button>\r\n)\r\n\r\nconst ToastTranslucent = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-primary my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a primary background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-secondary my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a secondary background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-success my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a success background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-danger my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a danger background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-warning my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a warning background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-info my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on an info background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <div className='p-3 bg-dark my-2 rounded'>\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on an dark background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <div\r\n          className='p-3 my-2 rounded'\r\n          style={{\r\n            background: \"url(transparentBg)\"\r\n          }}\r\n        >\r\n          <Toast>\r\n            <ToastHeader close={close}>Vuexy</ToastHeader>\r\n            <ToastBody>\r\n              This is a toast on a transparent background — check it out!\r\n            </ToastBody>\r\n          </Toast>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ToastTranslucent\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const toastHeaderIcons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Toast, ToastBody, ToastHeader, Spinner, Row, Col } from 'reactstrap'\r\nimport logo from '@src/assets/images/logo/logo.png'\r\n\r\nconst close = (\r\n  <button type='button' className='ms-1 btn-close'>\r\n    <span>×</span>\r\n  </button>\r\n)\r\n\r\n\r\nconst ToastHeaderIcons = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='primary'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a primary icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='success'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a success icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='info'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a info icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='danger'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a danger icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='warning'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a warning icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon='dark'>Vuexy</ToastHeader>\r\n          <ToastBody>\r\n            This is a toast with a dark icon — check it out!\r\n          </ToastBody>\r\n        </Toast>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n          <ToastHeader close={close} icon={<Spinner size='sm' color='primary' />}>\r\n            Local Skills\r\n          </ToastHeader>\r\n          <ToastBody>This is a toast with a spinner — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n\r\n      <Col md='6' sm='12'>\r\n        <Toast>\r\n        <ToastHeader close={close} icon={logo}>Local Skills</ToastHeader>\r\n          <ToastBody>This is a toast with a logo — check it out!</ToastBody>\r\n        </Toast>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ToastHeaderIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport ToastTranslucent from './ToastTranslucent'\r\nimport ToastHeaderIcons from './ToastHeaderIcons'\r\n\r\n// ** Source Code\r\nimport { toastHeaderIcons, toastTranslucent } from './ToastSourceCode'\r\n\r\nconst Toasts = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs title='Toasts' data={[{ title: 'Components' }, { title: 'Toasts' }]} />\r\n      <Row className='match-height'>\r\n        <Col sm='12'>\r\n          <Card title='Toast Translucent' code={toastTranslucent}>\r\n            <CardText>\r\n              Toasts are slightly translucent, too, so they blend over whatever they might appear over. For browsers\r\n              that support the backdrop-filter CSS property, we’ll also attempt to blur the elements under a toast.\r\n            </CardText>\r\n            <ToastTranslucent />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Icons' code={toastHeaderIcons}>\r\n            <CardText>\r\n              Use <code>icon</code> attribute with <code>ToastHeader</code> tag to add an icon.\r\n            </CardText>\r\n            <ToastHeaderIcons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Toasts\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}