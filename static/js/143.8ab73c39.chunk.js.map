{"version":3,"sources":["views/forms/form-elements/select/SelectReact.js","views/forms/form-elements/select/SelectSizing.js","views/forms/form-elements/select/SelectOptions.js","views/forms/form-elements/select/SelectReactstrap.js","views/forms/form-elements/select/index.js","@core/components/breadcrumbs/index.js"],"names":["colourOptions","value","label","SelectReact","tag","className","target","href","rel","md","sm","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","name","isLoading","isDisabled","SelectReactstrap","for","type","bsSize","id","colorOptions","color","isFixed","iconOptions","icon","Facebook","Twitter","Linkedin","GitHub","Instagram","Dribbble","Gitlab","File","FileText","Image","Figma","Chrome","Globe","Slack","Youtube","OptionComponent","data","props","Icon","Option","size","groupedOptions","animatedComponents","makeAnimated","styles","multiValue","base","state","opacity","multiValueLabel","paddingRight","multiValueRemove","display","orderOptions","values","length","filter","v","concat","formatGroupLabel","SelectOptions","useState","query","setQuery","selectedDBVal","setSelectedDBVal","fixedValue","setFixedValue","isMulti","closeMenuOnSelect","components","onChange","action","removedValue","xs","loadOptions","inputValue","callback","setTimeout","i","toLowerCase","includes","filterColors1","defaultOptions","onInputChange","newValue","replace","Promise","resolve","filterColors2","cacheOptions","axios","get","then","res","disabled","multiple","Select","title","SelectSizing","BreadCrumbs","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","active","classnames","end"],"mappings":"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","file":"static/js/143.8ab73c39.chunk.js","sourcesContent":["// ** Third Party Components\nimport Select from 'react-select'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\n\nconst colourOptions = [\n  { value: 'ocean', label: 'Ocean' },\n  { value: 'blue', label: 'Blue' },\n  { value: 'purple', label: 'Purple' },\n  { value: 'red', label: 'Red' },\n  { value: 'orange', label: 'Orange' }\n]\n\nconst SelectReact = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>React Select</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <p>\n          React Select is a flexible and beautiful Select Input control for ReactJS with multiselect, autocomplete,\n          async and creatable support. You can read it's documentation from{' '}\n          <a className='my-50' target='_blank' href='https://react-select.com/home' rel='noopener noreferrer'>\n            here\n          </a>\n          .\n        </p>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Basic</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[0]}\n              options={colourOptions}\n              isClearable={false}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Clearable</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[1]}\n              name='clear'\n              options={colourOptions}\n              isClearable\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Loading</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[2]}\n              name='loading'\n              options={colourOptions}\n              isLoading={true}\n              isClearable={false}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Disabled</Label>\n            <Select\n              theme={selectThemeColors}\n              className='react-select'\n              classNamePrefix='select'\n              defaultValue={colourOptions[3]}\n              name='disabled'\n              options={colourOptions}\n              isDisabled={true}\n              isClearable={false}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReact\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\n\nconst SelectReactstrap = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Bootstrap Sizing</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='mb-1'>\n          <Label className='form-label' for='select-lg'>\n            Select Large\n          </Label>\n          <Input type='select' name='select' bsSize='lg' id='select-lg'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='select-default'>\n            Select Default\n          </Label>\n          <Input type='select' name='select' id='select-default'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n        <div>\n          <Label className='form-label' for='select-sm'>\n            Select Small\n          </Label>\n          <Input type='select' name='select' bsSize='sm' id='select-sm'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReactstrap\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Row, Col, Label } from 'reactstrap'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Select, { components } from 'react-select' // eslint-disable-line\nimport makeAnimated from 'react-select/animated'\nimport CreatableSelect from 'react-select/creatable'\nimport AsyncSelect from 'react-select/async'\nimport {\n  File,\n  Image,\n  Figma,\n  Globe,\n  Slack,\n  Chrome,\n  GitHub,\n  Gitlab,\n  Twitter,\n  Youtube,\n  Facebook,\n  Linkedin,\n  Dribbble,\n  FileText,\n  Instagram\n} from 'react-feather'\n\nconst colorOptions = [\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n  { value: 'blue', label: 'Blue', color: '#0052CC', isFixed: true },\n  { value: 'purple', label: 'Purple', color: '#5243AA', isFixed: true },\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: false },\n  { value: 'orange', label: 'Orange', color: '#FF8B00', isFixed: false },\n  { value: 'yellow', label: 'Yellow', color: '#FFC400', isFixed: false }\n]\n\nconst iconOptions = [\n  {\n    label: 'Social Media',\n    options: [\n      {\n        value: 'facebook',\n        label: 'Facebook',\n        icon: Facebook\n      },\n      {\n        value: 'twitter',\n        label: 'Twitter',\n        icon: Twitter\n      },\n      {\n        value: 'linkedin',\n        label: 'Linkedin',\n        icon: Linkedin\n      },\n      {\n        value: 'github',\n        label: 'Github',\n        icon: GitHub\n      },\n      {\n        value: 'instagram',\n        label: 'Instagram',\n        icon: Instagram\n      },\n      {\n        value: 'dribbble',\n        label: 'Dribbble',\n        icon: Dribbble\n      },\n      {\n        value: 'gitlab',\n        label: 'Gitlab',\n        icon: Gitlab\n      }\n    ]\n  },\n  {\n    label: 'File Types',\n    options: [\n      { value: 'pdf', label: 'PDF', icon: File },\n      { value: 'txt', label: 'txt', icon: FileText },\n      { value: 'image', label: 'Image', icon: Image }\n    ]\n  },\n  {\n    label: 'Others',\n    options: [\n      { value: 'figma', label: 'Figma', icon: Figma },\n      { value: 'chrome', label: 'Chrome', icon: Chrome },\n      { value: 'safari', label: 'Safari', icon: Globe },\n      { value: 'slack', label: 'Slack', icon: Slack },\n      { value: 'youtube', label: 'Youtube', icon: Youtube }\n    ]\n  }\n]\n\nconst OptionComponent = ({ data, ...props }) => {\n  const Icon = data.icon\n\n  return (\n    <components.Option {...props}>\n      <Icon className='me-50' size={14} />\n      {data.label}\n    </components.Option>\n  )\n}\n\nconst groupedOptions = [\n  {\n    label: 'Ice Creams',\n    options: [\n      { value: 'vanilla', label: 'Vanilla' },\n      { value: 'Dark Chocolate', label: 'Dark Chocolate' },\n      { value: 'chocolate', label: 'Chocolate' },\n      { value: 'strawberry', label: 'Strawberry' },\n      { value: 'salted-caramel', label: 'Salted Caramel' }\n    ]\n  },\n  {\n    label: 'Snacks',\n    options: [\n      { value: 'Pizza', label: 'Pizza' },\n      { value: 'Burger', label: 'Burger' },\n      { value: 'Pasta', label: 'Pasta' },\n      { value: 'Pretzel', label: 'Pretzel' },\n      { value: 'Popcorn', label: 'Popcorn' }\n    ]\n  }\n]\n\nconst animatedComponents = makeAnimated()\n\nconst styles = {\n  multiValue: (base, state) => {\n    return state.data.isFixed ? { ...base, opacity: '0.5' } : base\n  },\n  multiValueLabel: (base, state) => {\n    return state.data.isFixed ? { ...base, color: '#626262', paddingRight: 6 } : base\n  },\n  multiValueRemove: (base, state) => {\n    return state.data.isFixed ? { ...base, display: 'none' } : base\n  }\n}\n\nconst orderOptions = values => {\n  if (values.length > 0) return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed))\n}\n\nconst formatGroupLabel = data => (\n  <div className='d-flex justify-content-between align-center'>\n    <strong>\n      <span>{data.label}</span>\n    </strong>\n    <span>{data.options.length}</span>\n  </div>\n)\n\nconst SelectOptions = () => {\n  // ** State\n  const [query, setQuery] = useState('')\n  const [selectedDBVal, setSelectedDBVal] = useState(null)\n  const [fixedValue, setFixedValue] = useState(orderOptions([colorOptions[0], colorOptions[1], colorOptions[3]]))\n\n  const filterColors1 = inputValue => {\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\n  }\n\n  const loadOptions = (inputValue, callback) => {\n    setTimeout(() => {\n      callback(filterColors1(inputValue))\n    }, 2000)\n  }\n\n  const filterColors2 = inputValue => {\n    return colorOptions.filter(i => i.label.toLowerCase().includes(inputValue.toLowerCase()))\n  }\n\n  const fixedOnChange = (value, { action, removedValue }) => {\n    switch (action) {\n      case 'remove-value':\n      case 'pop-value':\n        if (removedValue.isFixed) {\n          return\n        }\n        break\n      case 'clear':\n        value = colorOptions.filter(v => v.isFixed)\n        break\n      default:\n        break\n    }\n\n    value = orderOptions(value)\n    setFixedValue(value)\n  }\n\n  const handleInputChange = newValue => {\n    const val = newValue.replace(/\\W/g, '')\n    return val\n  }\n\n  const handleDBInputChange = newValue => {\n    setQuery(newValue)\n  }\n\n  // handle selection\n  const handleDBChange = value => {\n    setSelectedDBVal(value)\n  }\n\n  const promiseOptions = inputValue => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(filterColors2(inputValue))\n      }, 2000)\n    })\n  }\n\n  const loadOptionsDB = () => {\n    return axios.get('/api/select/data', { query }).then(res => {\n      return res.data\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n\n      <CardBody>\n        <Row>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Multi Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              defaultValue={[colorOptions[2], colorOptions[3]]}\n              isMulti\n              name='colors'\n              options={colorOptions}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Grouped Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              defaultValue={colorOptions[1]}\n              options={groupedOptions}\n              formatGroupLabel={formatGroupLabel}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Animated Select</Label>\n            <Select\n              isClearable={false}\n              theme={selectThemeColors}\n              closeMenuOnSelect={false}\n              components={animatedComponents}\n              defaultValue={[colorOptions[4], colorOptions[5]]}\n              isMulti\n              options={colorOptions}\n              className='react-select'\n              classNamePrefix='select'\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Fixed Options Select</Label>\n            <Select\n              isClearable={false}\n              value={fixedValue}\n              styles={styles}\n              isMulti\n              onChange={fixedOnChange}\n              theme={selectThemeColors}\n              name='colors'\n              className='react-select'\n              classNamePrefix='select'\n              options={colorOptions}\n            />\n          </Col>\n          <Col md={6} xs={12} className='mb-1'>\n            <Label className='form-label'>Async Callback Select</Label>\n            <AsyncSelect\n              isClearable={false}\n              className='react-select'\n              classNamePrefix='select'\n              name='callback-react-select'\n              loadOptions={loadOptions}\n              defaultOptions\n              onInputChange={handleInputChange}\n              theme={selectThemeColors}\n            />\n          </Col>\n          <Col md={6} xs={12} className='mb-1'>\n            <Label className='form-label'>Async Promises Select</Label>\n            <AsyncSelect\n              isClearable={false}\n              className='react-select'\n              classNamePrefix='select'\n              loadOptions={promiseOptions}\n              cacheOptions\n              defaultOptions\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Creatable Select</Label>\n            <CreatableSelect options={colorOptions} className='react-select' classNamePrefix='select' />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Icons</Label>\n            <Select\n              options={iconOptions}\n              className='react-select'\n              classNamePrefix='select'\n              components={{\n                Option: OptionComponent\n              }}\n            />\n          </Col>\n          <Col className='mb-1' md='6' sm='12'>\n            <Label className='form-label'>Async Select With Database</Label>\n            <AsyncSelect\n              defaultOptions\n              isClearable={false}\n              value={selectedDBVal}\n              name='db-react-select'\n              className='react-select'\n              classNamePrefix='select'\n              onChange={handleDBChange}\n              theme={selectThemeColors}\n              loadOptions={loadOptionsDB}\n              onInputChange={handleDBInputChange}\n            />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectOptions\n","// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, Input, Label } from 'reactstrap'\n\nconst SelectReactstrap = () => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Reactstrap Select</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='mb-1'>\n          <Label className='form-label' for='select-basic'>\n            Basic Select\n          </Label>\n          <Input type='select' name='select' id='select-basic'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='select-custom'>\n            Custom Select\n          </Label>\n          <Input type='select' name='select' id='select-custom'>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='select-disabled'>\n            Disabled Select\n          </Label>\n          <Input type='select' name='select' id='select-disabled' disabled>\n            <option>Pulp Fiction</option>\n            <option>Nightcrawler</option>\n            <option>Donnie Darko</option>\n          </Input>\n        </div>\n        <div>\n          <Label className='form-label' for='select-multi'>\n            Multiple Select\n          </Label>\n          <Input type='select' name='select' id='select-multi' multiple>\n            <option>Square</option>\n            <option>Rectangle</option>\n            <option>Circle</option>\n            <option>Triangle</option>\n            <option>Pentagon</option>\n          </Input>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\nexport default SelectReactstrap\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport ReactSelect from './SelectReact'\nimport SelectSizing from './SelectSizing'\nimport Selectoptions from './SelectOptions'\nimport SelectReactstrap from './SelectReactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Select = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs title='Select' data={[{ title: 'Form Elements' }, { title: 'Select' }]} />\n      <Row>\n        <Col sm='12'>\n          <ReactSelect />\n        </Col>\n        <Col sm='12'>\n          <Selectoptions />\n        </Col>\n        <Col md='6' sm='12'>\n          <SelectReactstrap />\n        </Col>\n        <Col md='6' sm='12'>\n          <SelectSizing />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Select\n","// ** React Imports\nimport { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Breadcrumb,\n  DropdownMenu,\n  DropdownItem,\n  BreadcrumbItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { data, title } = props\n\n  const renderBreadCrumbs = () => {\n    return data.map((item, index) => {\n      const Wrapper = item.link ? Link : Fragment\n      const isLastItem = data.length - 1 === index\n      return (\n        <BreadcrumbItem\n          tag='li'\n          key={index}\n          active={!isLastItem}\n          className={classnames({ 'text-primary': !isLastItem })}\n        >\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\n        </BreadcrumbItem>\n      )\n    })\n  }\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                {renderBreadCrumbs()}\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\n        <div className='breadcrumb-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' end>\n              <DropdownItem tag={Link} to='/apps/todo'>\n                <CheckSquare className='me-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='me-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='me-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='me-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  title: Proptypes.string.isRequired,\n  data: Proptypes.arrayOf(\n    Proptypes.shape({\n      link: Proptypes.string,\n      title: Proptypes.string.isRequired\n    })\n  )\n}\n"],"sourceRoot":""}