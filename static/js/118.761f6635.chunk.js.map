{"version":3,"sources":["views/components/badge/BadgeLink.js","views/components/badge/BadgeGlow.js","views/components/badge/BadgeBlock.js","views/components/badge/BadgeIcons.js","views/components/badge/BadgeLight.js","views/components/badge/BadgeContextual.js","views/components/badge/BadgeSourceCode.js","views/components/badge/index.js","@core/components/breadcrumbs/index.js","@core/components/card-snippet/index.js"],"names":["BadgeLink","color","href","size","className","BadgeGlow","BadgeBlock","BadgeIcons","BadgeLight","BadgeContextual","badgeContextual","badgeGlow","badgeLight","badgeIcons","badgeLink","badgeBlock","Badges","useEffect","Prism","highlightAll","title","data","sm","code","md","BreadCrumbs","props","tag","to","map","item","index","Wrapper","link","Link","Fragment","isLastItem","length","active","classnames","end","CardSnippet","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","CardBody","onClick"],"mappings":"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","file":"static/js/118.761f6635.chunk.js","sourcesContent":["// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span className='align-middle'>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\n// ** Icons Imports\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle ms-25'>Dark</span>\r\n      </Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='light-primary'>Primary</Badge>\r\n      <Badge color='light-secondary'>Secondary</Badge>\r\n      <Badge color='light-success'>Success</Badge>\r\n      <Badge color='light-danger'>Danger</Badge>\r\n      <Badge color='light-warning'>Warning</Badge>\r\n      <Badge color='light-info'>Info</Badge>\r\n      <Badge color='light-dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeLight\r\n","// ** Reactstrap Imports\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <div className='demo-inline-spacing'>\r\n      <Badge color='primary'>Primary</Badge>\r\n      <Badge color='secondary'>Secondary</Badge>\r\n      <Badge color='success'>Success</Badge>\r\n      <Badge color='danger'>Danger</Badge>\r\n      <Badge color='warning'>Warning</Badge>\r\n      <Badge color='info'>Info</Badge>\r\n      <Badge color='dark'>Dark</Badge>\r\n    </div>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n","export const badgeContextual = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeContextual = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeContextual\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeGlow = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeGlow = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary' className='badge-glow'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='secondary' className='badge-glow'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='success' className='badge-glow'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='danger' className='badge-glow'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='warning' className='badge-glow'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='info' className='badge-glow'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='dark' className='badge-glow'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeGlow\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLight = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeLight = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='light-primary'>\r\n        Primary\r\n      </Badge>\r\n      <Badge color='light-secondary'>\r\n        Secondary\r\n      </Badge>\r\n      <Badge color='light-success'>\r\n        Success\r\n      </Badge>\r\n      <Badge color='light-danger'>\r\n        Danger\r\n      </Badge>\r\n      <Badge color='light-warning'>\r\n        Warning\r\n      </Badge>\r\n      <Badge color='light-info'>\r\n        Info\r\n      </Badge>\r\n      <Badge color='light-dark'>\r\n        Dark\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeLight\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeIcons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Star } from 'react-feather'\r\n\r\nconst BadgeIcons = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Badge color='primary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Primary</span>\r\n      </Badge>\r\n      <Badge color='secondary'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Secondary</span>\r\n      </Badge>\r\n      <Badge color='success'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Success</span>\r\n      </Badge>\r\n      <Badge color='danger'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Danger</span>\r\n      </Badge>\r\n      <Badge color='warning'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Warning</span>\r\n      </Badge>\r\n      <Badge color='info'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Info</span>\r\n      </Badge>\r\n      <Badge color='dark'>\r\n        <Star size={12} className='align-middle me-25' />\r\n        <span className='align-middle'>Dark</span>\r\n      </Badge>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default BadgeIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeLink = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\nimport { Link } from 'react-feather'\r\n\r\nconst BadgeLink = () => {\r\n  return (\r\n    <Badge color='primary' href='#'>\r\n      <Link size={12} className='me-25' />\r\n      <span>Link Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeLink\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const badgeBlock = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Badge } from 'reactstrap'\r\n\r\nconst BadgeBlock = () => {\r\n  return (\r\n    <Badge color='primary' className='d-block'>\r\n      <span>Block Badge</span>\r\n    </Badge>\r\n  )\r\n}\r\nexport default BadgeBlock\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","// ** React Imports\r\nimport { Fragment, useEffect } from 'react'\r\n\r\n// ** Reactstrap Imports\r\nimport { Row, Col, CardText } from 'reactstrap'\r\n\r\n// ** Third Party Components\r\nimport Prism from 'prismjs'\r\n\r\n// ** Custom Components\r\nimport Card from '@components/card-snippet'\r\nimport BreadCrumbs from '@components/breadcrumbs'\r\n\r\n// ** Demo Components\r\nimport BadgeLink from './BadgeLink'\r\nimport BadgeGlow from './BadgeGlow'\r\nimport BadgeBlock from './BadgeBlock'\r\nimport BadgeIcons from './BadgeIcons'\r\nimport BadgeLight from './BadgeLight'\r\nimport BadgeContextual from './BadgeContextual'\r\n\r\n// ** Source Code\r\nimport { badgeContextual, badgeGlow, badgeLight, badgeIcons, badgeLink, badgeBlock } from './BadgeSourceCode'\r\n\r\nconst Badges = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  }, [])\r\n  return (\r\n    <Fragment>\r\n      <BreadCrumbs title='Badges' data={[{ title: 'Components' }, { title: 'Badges' }]} />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <Card title='Contextual Badges' code={badgeContextual}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color</code> with <code>Badge</code> tag to create badge with different colors.\r\n            </CardText>\r\n            <BadgeContextual />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Glow Badges' code={badgeGlow}>\r\n            <CardText className='mb-0'>\r\n              Use class <code>badge-glow</code> with <code>Badge</code> tag to add glow effect to your badge\r\n            </CardText>\r\n            <BadgeGlow />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Light Badges' code={badgeLight}>\r\n            <CardText className='mb-0'>\r\n              Use prop <code>color=\"light-COLOR_NAME\"</code> with <code>Badge</code> tag to create badge with different\r\n              colors.\r\n            </CardText>\r\n            <BadgeLight />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Badges With Icons' code={badgeIcons}>\r\n            <BadgeIcons />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Link Badge' code={badgeLink}>\r\n            <CardText>\r\n              Use <code>href=\"#\"</code> prop to use badge as a link.\r\n            </CardText>\r\n            <BadgeLink />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Block Badge' code={badgeBlock}>\r\n            <CardText>\r\n              Use <code>.d-block</code> class to make badge display as block.\r\n            </CardText>\r\n            <BadgeBlock />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default Badges\r\n","// ** React Imports\r\nimport { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { data, title } = props\r\n\r\n  const renderBreadCrumbs = () => {\r\n    return data.map((item, index) => {\r\n      const Wrapper = item.link ? Link : Fragment\r\n      const isLastItem = data.length - 1 === index\r\n      return (\r\n        <BreadcrumbItem\r\n          tag='li'\r\n          key={index}\r\n          active={!isLastItem}\r\n          className={classnames({ 'text-primary': !isLastItem })}\r\n        >\r\n          <Wrapper {...(item.link ? { to: item.link } : {})}>{item.title}</Wrapper>\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {title ? <h2 className='content-header-title float-start mb-0'>{title}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                {renderBreadCrumbs()}\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  data: Proptypes.arrayOf(\r\n    Proptypes.shape({\r\n      link: Proptypes.string,\r\n      title: Proptypes.string.isRequired\r\n    })\r\n  )\r\n}\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  code: PropTypes.node,\r\n  noBody: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  iconCode: PropTypes.node,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}